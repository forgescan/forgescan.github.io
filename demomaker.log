/home/ubuntu/forgescan.github.ioDEBUG:root:loggerdoer worked
DEBUG:root:fileiowas imported
DEBUG:root:heres the cwd/home/ubuntu/forgescan.github.io
DEBUG:root:HERE I SHOULD BE LOGGING SOMTHING
DEBUG:oauth2client.client:{'iss': u'205443885400-cdl80r1q3am00nv1tnont4i2urafla3j@developer.gserviceaccount.com', 'scope': 'https://spreadsheets.google.com/feeds', 'aud': 'https://accounts.google.com/o/oauth2/token', 'exp': 1433689645, 'iat': 1433686045}
DEBUG:oauth2client.crypt:[u'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9', u'eyJpc3MiOiIyMDU0NDM4ODU0MDAtY2RsODByMXEzYW0wMG52MXRub250NGkydXJhZmxhM2pAZGV2ZWxvcGVyLmdzZXJ2aWNlYWNjb3VudC5jb20iLCJzY29wZSI6Imh0dHBzOi8vc3ByZWFkc2hlZXRzLmdvb2dsZS5jb20vZmVlZHMiLCJhdWQiOiJodHRwczovL2FjY291bnRzLmdvb2dsZS5jb20vby9vYXV0aDIvdG9rZW4iLCJleHAiOjE0MzM2ODk2NDUsImlhdCI6MTQzMzY4NjA0NX0', u'e8Vro29euB4AxSC4flewpM7zDzaKHp4UUAtmrifJZ4G9LiPh9t_JEKXjcP0CMbltCY2n4xoWNDE-w9HyLs2TBRwOsWW6hoOx1BuVDzmJfTqfYIzGeT_F9GLk8juvGRnMHH-xe6LOzy2SlwIFFlk23CBA7yhKIUFvh64BEXtAhaE']
INFO:oauth2client.client:Refreshing access_token
DEBUG:root:loggerdoer worked
DEBUG:root:fileiowas imported
DEBUG:root:heres the cwd/home/ubuntu/forgescan.github.io
DEBUG:root:HERE I SHOULD BE LOGGING SOMTHING
DEBUG:oauth2client.client:{'iss': u'205443885400-cdl80r1q3am00nv1tnont4i2urafla3j@developer.gserviceaccount.com', 'scope': 'https://spreadsheets.google.com/feeds', 'aud': 'https://accounts.google.com/o/oauth2/token', 'exp': 1433689848, 'iat': 1433686248}
DEBUG:oauth2client.crypt:[u'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9', u'eyJpc3MiOiIyMDU0NDM4ODU0MDAtY2RsODByMXEzYW0wMG52MXRub250NGkydXJhZmxhM2pAZGV2ZWxvcGVyLmdzZXJ2aWNlYWNjb3VudC5jb20iLCJzY29wZSI6Imh0dHBzOi8vc3ByZWFkc2hlZXRzLmdvb2dsZS5jb20vZmVlZHMiLCJhdWQiOiJodHRwczovL2FjY291bnRzLmdvb2dsZS5jb20vby9vYXV0aDIvdG9rZW4iLCJleHAiOjE0MzM2ODk4NDgsImlhdCI6MTQzMzY4NjI0OH0', u'oNZCbCupriBF2zp2idTqIffdafgmYCvg71XY6-xtXZQXQKAEq0xCB0Fxb263QlDBnrAjYTB4DjjUTIn7UlcmTP0NyxZYKIucDMNGJA1J_KVKfruVqZ6UgHjxmYgiUvALsY8jYrj7rk43mv5076vN4aP68mzUvM5b_R_TXH1YVLQ']
INFO:oauth2client.client:Refreshing access_token
DEBUG:root:loggerdoer worked
DEBUG:root:fileiowas imported
DEBUG:root:heres the cwd/home/ubuntu/forgescan.github.io
DEBUG:root:HERE I SHOULD BE LOGGING SOMTHING
DEBUG:oauth2client.client:{'iss': u'205443885400-cdl80r1q3am00nv1tnont4i2urafla3j@developer.gserviceaccount.com', 'scope': 'https://spreadsheets.google.com/feeds', 'aud': 'https://accounts.google.com/o/oauth2/token', 'exp': 1433690161, 'iat': 1433686561}
DEBUG:oauth2client.crypt:[u'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9', u'eyJpc3MiOiIyMDU0NDM4ODU0MDAtY2RsODByMXEzYW0wMG52MXRub250NGkydXJhZmxhM2pAZGV2ZWxvcGVyLmdzZXJ2aWNlYWNjb3VudC5jb20iLCJzY29wZSI6Imh0dHBzOi8vc3ByZWFkc2hlZXRzLmdvb2dsZS5jb20vZmVlZHMiLCJhdWQiOiJodHRwczovL2FjY291bnRzLmdvb2dsZS5jb20vby9vYXV0aDIvdG9rZW4iLCJleHAiOjE0MzM2OTAxNjEsImlhdCI6MTQzMzY4NjU2MX0', u'VQF2iJhXgeE88KVYl7D9MRE6NPedHpTAm5iZeMW-wiLieiEncD2JUc0-fOK7lE-zvh1mrv1en4E5Rb_WQp9H8urwlnC5O9Ueh7TYu_8bJeEXgqo6kj2zyFIVu2IMse3Fd0w43e3BhXWOt6Sk-xWFpaE9GLi_4HSl8AaMmjDk8eg']
INFO:oauth2client.client:Refreshing access_token
DEBUG:root:loggerdoer worked
DEBUG:root:fileiowas imported
DEBUG:root:heres the cwd/home/ubuntu/forgescan.github.io
DEBUG:root:HERE I SHOULD BE LOGGING SOMTHING
DEBUG:oauth2client.client:{'iss': u'205443885400-cdl80r1q3am00nv1tnont4i2urafla3j@developer.gserviceaccount.com', 'scope': 'https://spreadsheets.google.com/feeds', 'aud': 'https://accounts.google.com/o/oauth2/token', 'exp': 1433692506, 'iat': 1433688906}
DEBUG:oauth2client.crypt:[u'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9', u'eyJpc3MiOiIyMDU0NDM4ODU0MDAtY2RsODByMXEzYW0wMG52MXRub250NGkydXJhZmxhM2pAZGV2ZWxvcGVyLmdzZXJ2aWNlYWNjb3VudC5jb20iLCJzY29wZSI6Imh0dHBzOi8vc3ByZWFkc2hlZXRzLmdvb2dsZS5jb20vZmVlZHMiLCJhdWQiOiJodHRwczovL2FjY291bnRzLmdvb2dsZS5jb20vby9vYXV0aDIvdG9rZW4iLCJleHAiOjE0MzM2OTI1MDYsImlhdCI6MTQzMzY4ODkwNn0', u'KcPxo1ULBMguX7cwwZQDixVBJP4dnnVMLqc7zav5uttSSLyJnMF0I6f9nuS0vdxtpVdFANFob76LHtNuJvq2Zh-epC2kmnwPUhihBknAfV3zEBGhZqQZE143e8xMlTlqZ3fH6Jj_NJ7A1x-5cEwxTuZhHWqOWQfRvCm3ZJVQpRU']
INFO:oauth2client.client:Refreshing access_token
DEBUG:root:loggerdoer worked
DEBUG:root:fileiowas imported
DEBUG:root:heres the cwd/home/ubuntu/forgescan.github.io
DEBUG:root:HERE I SHOULD BE LOGGING SOMTHING
DEBUG:oauth2client.client:{'iss': u'205443885400-cdl80r1q3am00nv1tnont4i2urafla3j@developer.gserviceaccount.com', 'scope': 'https://spreadsheets.google.com/feeds', 'aud': 'https://accounts.google.com/o/oauth2/token', 'exp': 1433692768, 'iat': 1433689168}
DEBUG:oauth2client.crypt:[u'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9', u'eyJpc3MiOiIyMDU0NDM4ODU0MDAtY2RsODByMXEzYW0wMG52MXRub250NGkydXJhZmxhM2pAZGV2ZWxvcGVyLmdzZXJ2aWNlYWNjb3VudC5jb20iLCJzY29wZSI6Imh0dHBzOi8vc3ByZWFkc2hlZXRzLmdvb2dsZS5jb20vZmVlZHMiLCJhdWQiOiJodHRwczovL2FjY291bnRzLmdvb2dsZS5jb20vby9vYXV0aDIvdG9rZW4iLCJleHAiOjE0MzM2OTI3NjgsImlhdCI6MTQzMzY4OTE2OH0', u'kJQXrF3MOnBk3iFHCFXifgGAI5nrzUGtlfzZMbRgNMxW3S-3PZcOme61KhsK--a1YHupDYsd_lzqkuNRjfR1G88Hos-DCveiAdtW9CGJtQchn3l5czLJdo1PiekoZwcfNxEkT5TrI4DP1V_Gbj99L-8wkR3KuC_my-d0_Zjy9WQ']
INFO:oauth2client.client:Refreshing access_token
DEBUG:root:timeout, no new thread made2015-06-07 15:00:29.499097
DEBUG:root:loggerdoer worked
DEBUG:root:fileiowas imported
DEBUG:root:heres the cwd/home/ubuntu/forgescan.github.io
DEBUG:root:HERE I SHOULD BE LOGGING SOMTHING
DEBUG:oauth2client.client:{'iss': u'205443885400-cdl80r1q3am00nv1tnont4i2urafla3j@developer.gserviceaccount.com', 'scope': 'https://spreadsheets.google.com/feeds', 'aud': 'https://accounts.google.com/o/oauth2/token', 'exp': 1433692964, 'iat': 1433689364}
DEBUG:oauth2client.crypt:[u'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9', u'eyJpc3MiOiIyMDU0NDM4ODU0MDAtY2RsODByMXEzYW0wMG52MXRub250NGkydXJhZmxhM2pAZGV2ZWxvcGVyLmdzZXJ2aWNlYWNjb3VudC5jb20iLCJzY29wZSI6Imh0dHBzOi8vc3ByZWFkc2hlZXRzLmdvb2dsZS5jb20vZmVlZHMiLCJhdWQiOiJodHRwczovL2FjY291bnRzLmdvb2dsZS5jb20vby9vYXV0aDIvdG9rZW4iLCJleHAiOjE0MzM2OTI5NjQsImlhdCI6MTQzMzY4OTM2NH0', u'Hhz5yj0DnXeC7jgp2uhB9QQjV_cDYoQkpFEwtOgBiPOMSOIo51B7TUF1g6vqhO6cKJ1J_Bnh33FIgvzgB8LjgLevsUgJXWBR0t4L3NUQec1CIU0RsxkwEaA5SyxXG_z0tvskpqXumD2IfCpPPyfEHXyNidQNh5q-0BPXg0OdJ9Y']
INFO:oauth2client.client:Refreshing access_token
DEBUG:root:loggerdoer worked
DEBUG:root:fileiowas imported
DEBUG:root:heres the cwd/home/ubuntu/forgescan.github.io
DEBUG:root:HERE I SHOULD BE LOGGING SOMTHING
DEBUG:oauth2client.client:{'iss': u'205443885400-cdl80r1q3am00nv1tnont4i2urafla3j@developer.gserviceaccount.com', 'scope': 'https://spreadsheets.google.com/feeds', 'aud': 'https://accounts.google.com/o/oauth2/token', 'exp': 1433693297, 'iat': 1433689697}
DEBUG:oauth2client.crypt:[u'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9', u'eyJpc3MiOiIyMDU0NDM4ODU0MDAtY2RsODByMXEzYW0wMG52MXRub250NGkydXJhZmxhM2pAZGV2ZWxvcGVyLmdzZXJ2aWNlYWNjb3VudC5jb20iLCJzY29wZSI6Imh0dHBzOi8vc3ByZWFkc2hlZXRzLmdvb2dsZS5jb20vZmVlZHMiLCJhdWQiOiJodHRwczovL2FjY291bnRzLmdvb2dsZS5jb20vby9vYXV0aDIvdG9rZW4iLCJleHAiOjE0MzM2OTMyOTcsImlhdCI6MTQzMzY4OTY5N30', u'S2bb1ZlUByvaT6xmrGBDCOpwyeSK3vXc8FBZDPG7T5b5qNnmsPbgu2vU2zqUgUv08l3x2NnCDp-_UXzWSM_AC8cM6YinQbiYbUb-xdJgfXuFcrSNXtW08UJxtyjHMZvr7Sq1TkR6hxPiEsF6ynM735DpXuUE4DxrR2QzUPml-x8']
INFO:oauth2client.client:Refreshing access_token
DEBUG:root:i finished updated the demo pages2015-06-07 15:08:34.644531
DEBUG:root:i finished updated the git2015-06-07 15:08:38.065358
DEBUG:root:i finished updated the demo pages2015-06-07 15:09:04.069107
DEBUG:root:i finished updated the git2015-06-07 15:09:08.114605
DEBUG:root:i finished updated the demo pages2015-06-07 15:09:35.528145
DEBUG:root:i finished updated the git2015-06-07 15:09:39.378541
DEBUG:root:i finished updated the demo pages2015-06-07 15:10:06.638694
DEBUG:root:i finished updated the git2015-06-07 15:10:10.619231
DEBUG:root:i finished updated the demo pages2015-06-07 15:10:38.270579
DEBUG:root:i finished updated the git2015-06-07 15:10:42.194111
DEBUG:root:i finished updated the demo pages2015-06-07 15:11:09.213853
DEBUG:root:i finished updated the git2015-06-07 15:11:13.093539
DEBUG:root:i finished updated the demo pages2015-06-07 15:11:46.473802
DEBUG:root:i finished updated the git2015-06-07 15:11:50.297934
DEBUG:root:i finished updated the demo pages2015-06-07 15:12:17.773264
DEBUG:root:i finished updated the git2015-06-07 15:12:21.816106
DEBUG:root:i finished updated the demo pages2015-06-07 15:12:49.647348
DEBUG:root:i finished updated the git2015-06-07 15:12:53.663813
DEBUG:root:i finished updated the demo pages2015-06-07 15:13:20.869512
DEBUG:root:i finished updated the git2015-06-07 15:13:24.729794
DEBUG:root:i finished updated the demo pages2015-06-07 15:13:52.350335
DEBUG:root:i finished updated the git2015-06-07 15:13:56.971998
DEBUG:root:i finished updated the demo pages2015-06-07 15:14:30.083960
DEBUG:root:i finished updated the git2015-06-07 15:14:34.780764
DEBUG:root:i finished updated the demo pages2015-06-07 15:15:07.952896
DEBUG:root:i finished updated the git2015-06-07 15:15:12.770959
DEBUG:root:i finished updated the demo pages2015-06-07 15:15:46.714014
DEBUG:root:i finished updated the git2015-06-07 15:15:51.366900
DEBUG:root:i finished updated the demo pages2015-06-07 15:16:24.859878
DEBUG:root:i finished updated the git2015-06-07 15:16:29.765536
DEBUG:root:i finished updated the demo pages2015-06-07 15:17:03.333532
DEBUG:root:i finished updated the git2015-06-07 15:17:08.220492
DEBUG:root:i finished updated the demo pages2015-06-07 15:17:41.758042
DEBUG:root:i finished updated the git2015-06-07 15:17:46.419085
DEBUG:root:i finished updated the demo pages2015-06-07 15:18:19.486862
DEBUG:root:i finished updated the git2015-06-07 15:18:24.489114
DEBUG:root:i finished updated the demo pages2015-06-07 15:18:57.696929
DEBUG:root:i finished updated the git2015-06-07 15:19:02.750369
DEBUG:root:i finished updated the demo pages2015-06-07 15:19:36.642963
DEBUG:root:i finished updated the git2015-06-07 15:19:41.423631
DEBUG:root:i finished updated the demo pages2015-06-07 15:20:14.666298
DEBUG:root:loggerdoer worked
DEBUG:root:fileiowas imported
DEBUG:root:heres the cwd/home/ubuntu/forgescan.github.io
DEBUG:root:HERE I SHOULD BE LOGGING SOMTHING
DEBUG:oauth2client.client:{'iss': u'205443885400-cdl80r1q3am00nv1tnont4i2urafla3j@developer.gserviceaccount.com', 'scope': 'https://spreadsheets.google.com/feeds', 'aud': 'https://accounts.google.com/o/oauth2/token', 'exp': 1433694029, 'iat': 1433690429}
DEBUG:oauth2client.crypt:[u'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9', u'eyJpc3MiOiIyMDU0NDM4ODU0MDAtY2RsODByMXEzYW0wMG52MXRub250NGkydXJhZmxhM2pAZGV2ZWxvcGVyLmdzZXJ2aWNlYWNjb3VudC5jb20iLCJzY29wZSI6Imh0dHBzOi8vc3ByZWFkc2hlZXRzLmdvb2dsZS5jb20vZmVlZHMiLCJhdWQiOiJodHRwczovL2FjY291bnRzLmdvb2dsZS5jb20vby9vYXV0aDIvdG9rZW4iLCJleHAiOjE0MzM2OTQwMjksImlhdCI6MTQzMzY5MDQyOX0', u'fZhCpmts2zv-bfEA2vfDx_7ovY2vvZEzvh1hF8BGzPB_ptOSnyhpDkBq6-IR_0Zn4z3wUOc3W_JeuB1_lfHJbZi7xG7lwdoWwO7ha_a7vZhbxG141fFgn0XKoljEiEWgETsek6-KWoHF7KCwMB4e8TiCg4xbVxt7hBkDWVw6K6s']
INFO:oauth2client.client:Refreshing access_token
DEBUG:root:i finished updated the demo pages2015-06-07 15:20:52.936312
DEBUG:root:None

DEBUG:root:None

DEBUG:root:None

DEBUG:root:None

DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 15:20:57.831053
DEBUG:root:i finished updated the demo pages2015-06-07 15:21:30.797701
DEBUG:root:None

DEBUG:root:None

DEBUG:root:None

DEBUG:root:None

DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 15:21:35.531866
DEBUG:root:i finished updated the demo pages2015-06-07 15:22:08.225561
DEBUG:root:None

DEBUG:root:None

DEBUG:root:None

DEBUG:root:None

DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 15:22:12.757677
DEBUG:root:i finished updated the demo pages2015-06-07 15:22:45.633886
DEBUG:root:None

DEBUG:root:None

DEBUG:root:None

DEBUG:root:None

DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 15:22:50.327379
DEBUG:root:i finished updated the demo pages2015-06-07 15:23:23.238282
DEBUG:root:None

DEBUG:root:None

DEBUG:root:None

DEBUG:root:None

DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 15:23:28.147866
DEBUG:root:loggerdoer worked
DEBUG:root:fileiowas imported
DEBUG:root:heres the cwd/home/ubuntu/forgescan.github.io
DEBUG:root:HERE I SHOULD BE LOGGING SOMTHING
DEBUG:oauth2client.client:{'iss': u'205443885400-cdl80r1q3am00nv1tnont4i2urafla3j@developer.gserviceaccount.com', 'scope': 'https://spreadsheets.google.com/feeds', 'aud': 'https://accounts.google.com/o/oauth2/token', 'exp': 1433694219, 'iat': 1433690619}
DEBUG:oauth2client.crypt:[u'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9', u'eyJpc3MiOiIyMDU0NDM4ODU0MDAtY2RsODByMXEzYW0wMG52MXRub250NGkydXJhZmxhM2pAZGV2ZWxvcGVyLmdzZXJ2aWNlYWNjb3VudC5jb20iLCJzY29wZSI6Imh0dHBzOi8vc3ByZWFkc2hlZXRzLmdvb2dsZS5jb20vZmVlZHMiLCJhdWQiOiJodHRwczovL2FjY291bnRzLmdvb2dsZS5jb20vby9vYXV0aDIvdG9rZW4iLCJleHAiOjE0MzM2OTQyMTksImlhdCI6MTQzMzY5MDYxOX0', u'hsAPUPOmieli0ywq5GGa0epM-XiMIPsDt2NL6zRyQ64m0u_4Vb47awBQoDAOoaUlqafy6thL0vx2SE1cgH4z5XRvbitPUdrphygr2li293T346hpEV1UJ0Br079urUzqh8Z8lEmmmnWdnELRI5zJP2Sux_nqJ-Wt99YNhPGUw8U']
INFO:oauth2client.client:Refreshing access_token
DEBUG:root:i finished updated the demo pages2015-06-07 15:24:01.225295
DEBUG:root:None

DEBUG:root:None

DEBUG:root:None

DEBUG:root:
DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 15:24:06.738329
DEBUG:root:i finished updated the demo pages2015-06-07 15:24:34.832567
DEBUG:root:None

DEBUG:root:None

DEBUG:root:None

DEBUG:root:
DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 15:24:40.130858
DEBUG:root:i finished updated the demo pages2015-06-07 15:25:08.313455
DEBUG:root:None

DEBUG:root:None

DEBUG:root:None

DEBUG:root:
DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 15:25:13.863262
DEBUG:root:i finished updated the demo pages2015-06-07 15:25:41.433187
DEBUG:root:None

DEBUG:root:None

DEBUG:root:None

DEBUG:root:
DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 15:25:47.213397
DEBUG:root:i finished updated the demo pages2015-06-07 15:26:15.168249
DEBUG:root:None

DEBUG:root:None

DEBUG:root:None

DEBUG:root:
DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 15:26:20.500034
DEBUG:root:i finished updated the demo pages2015-06-07 15:26:47.847505
DEBUG:root:None

DEBUG:root:None

DEBUG:root:None

DEBUG:root:
DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 15:26:53.370720
DEBUG:root:i finished updated the demo pages2015-06-07 15:27:20.948376
DEBUG:root:None

DEBUG:root:None

DEBUG:root:None

DEBUG:root:
DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 15:27:26.283987
DEBUG:root:i finished updated the demo pages2015-06-07 15:27:53.731718
DEBUG:root:None

DEBUG:root:None

DEBUG:root:None

DEBUG:root:
DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 15:27:59.058936
DEBUG:root:i finished updated the demo pages2015-06-07 15:28:26.884793
DEBUG:root:None

DEBUG:root:None

DEBUG:root:None

DEBUG:root:loggerdoer worked
DEBUG:root:fileiowas imported
DEBUG:root:heres the cwd/home/ubuntu/forgescan.github.io
DEBUG:root:HERE I SHOULD BE LOGGING SOMTHING
DEBUG:oauth2client.client:{'iss': u'205443885400-cdl80r1q3am00nv1tnont4i2urafla3j@developer.gserviceaccount.com', 'scope': 'https://spreadsheets.google.com/feeds', 'aud': 'https://accounts.google.com/o/oauth2/token', 'exp': 1433694517, 'iat': 1433690917}
DEBUG:oauth2client.crypt:[u'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9', u'eyJpc3MiOiIyMDU0NDM4ODU0MDAtY2RsODByMXEzYW0wMG52MXRub250NGkydXJhZmxhM2pAZGV2ZWxvcGVyLmdzZXJ2aWNlYWNjb3VudC5jb20iLCJzY29wZSI6Imh0dHBzOi8vc3ByZWFkc2hlZXRzLmdvb2dsZS5jb20vZmVlZHMiLCJhdWQiOiJodHRwczovL2FjY291bnRzLmdvb2dsZS5jb20vby9vYXV0aDIvdG9rZW4iLCJleHAiOjE0MzM2OTQ1MTcsImlhdCI6MTQzMzY5MDkxN30', u'XvjucOe81Xh72F2_lvuY6yUl6D7CpAc7mPABIlWbu8Qr346aZOMkhp85FKtOXZ7I-7swXYW2hz81gyzGq6VJP1FyhXRVRDS1oemL2oht2FfK3fwBZlclxdhpg31uSE6tKV-_R9jnnQRsFtjI3yQtto8HJrU09TedeFxDDYJ_eKU']
INFO:oauth2client.client:Refreshing access_token
DEBUG:root:i finished updated the demo pages2015-06-07 15:28:57.645880
DEBUG:root:None

DEBUG:root:None

DEBUG:root:None

DEBUG:root:git failTraceback (most recent call last):
  File "/home/ubuntu/forgescan.github.io/HAPYAKFUNCTIONS.py", line 193, in gitupdate
    p = subprocess.Popen(['git push -f'], stdout=subprocess.PIPE,stderr=subprocess.PIPE,**kwargs)
  File "/usr/lib/python2.7/subprocess.py", line 710, in __init__
    errread, errwrite)
  File "/usr/lib/python2.7/subprocess.py", line 1327, in _execute_child
    raise child_exception
OSError: [Errno 2] No such file or directory

DEBUG:root:i finished updated the git2015-06-07 15:29:02.536730
DEBUG:root:i finished updated the demo pages2015-06-07 15:29:35.987760
DEBUG:root:None

DEBUG:root:None

DEBUG:root:None

DEBUG:root:git failTraceback (most recent call last):
  File "/home/ubuntu/forgescan.github.io/HAPYAKFUNCTIONS.py", line 193, in gitupdate
    p = subprocess.Popen(['git push -f'], stdout=subprocess.PIPE,stderr=subprocess.PIPE,**kwargs)
  File "/usr/lib/python2.7/subprocess.py", line 710, in __init__
    errread, errwrite)
  File "/usr/lib/python2.7/subprocess.py", line 1327, in _execute_child
    raise child_exception
OSError: [Errno 2] No such file or directory

DEBUG:root:i finished updated the git2015-06-07 15:29:40.886407
DEBUG:root:i finished updated the demo pages2015-06-07 15:30:13.772552
DEBUG:root:None

DEBUG:root:None

DEBUG:root:None

DEBUG:root:git failTraceback (most recent call last):
  File "/home/ubuntu/forgescan.github.io/HAPYAKFUNCTIONS.py", line 193, in gitupdate
    p = subprocess.Popen(['git push -f'], stdout=subprocess.PIPE,stderr=subprocess.PIPE,**kwargs)
  File "/usr/lib/python2.7/subprocess.py", line 710, in __init__
    errread, errwrite)
  File "/usr/lib/python2.7/subprocess.py", line 1327, in _execute_child
    raise child_exception
OSError: [Errno 2] No such file or directory

DEBUG:root:i finished updated the git2015-06-07 15:30:18.905626
DEBUG:root:i finished updated the demo pages2015-06-07 15:30:52.204211
DEBUG:root:None

DEBUG:root:None

DEBUG:root:None

DEBUG:root:git failTraceback (most recent call last):
  File "/home/ubuntu/forgescan.github.io/HAPYAKFUNCTIONS.py", line 193, in gitupdate
    p = subprocess.Popen(['git push -f'], stdout=subprocess.PIPE,stderr=subprocess.PIPE,**kwargs)
  File "/usr/lib/python2.7/subprocess.py", line 710, in __init__
    errread, errwrite)
  File "/usr/lib/python2.7/subprocess.py", line 1327, in _execute_child
    raise child_exception
OSError: [Errno 2] No such file or directory

DEBUG:root:i finished updated the git2015-06-07 15:30:57.317501
DEBUG:root:loggerdoer worked
DEBUG:root:fileiowas imported
DEBUG:root:heres the cwd/home/ubuntu/forgescan.github.io
DEBUG:root:HERE I SHOULD BE LOGGING SOMTHING
DEBUG:oauth2client.client:{'iss': u'205443885400-cdl80r1q3am00nv1tnont4i2urafla3j@developer.gserviceaccount.com', 'scope': 'https://spreadsheets.google.com/feeds', 'aud': 'https://accounts.google.com/o/oauth2/token', 'exp': 1433694694, 'iat': 1433691094}
DEBUG:oauth2client.crypt:[u'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9', u'eyJpc3MiOiIyMDU0NDM4ODU0MDAtY2RsODByMXEzYW0wMG52MXRub250NGkydXJhZmxhM2pAZGV2ZWxvcGVyLmdzZXJ2aWNlYWNjb3VudC5jb20iLCJzY29wZSI6Imh0dHBzOi8vc3ByZWFkc2hlZXRzLmdvb2dsZS5jb20vZmVlZHMiLCJhdWQiOiJodHRwczovL2FjY291bnRzLmdvb2dsZS5jb20vby9vYXV0aDIvdG9rZW4iLCJleHAiOjE0MzM2OTQ2OTQsImlhdCI6MTQzMzY5MTA5NH0', u'H4AqHz9lpTuEveKPNX2xHJ-XKexozUxdDQjhdl2udTrZZo8qHzguiV8Ps5i8KkaRGcn22dVkU36hM4KRCCcD4WLoZLUdbKtK9Yw0ENhgjTxayFCQxwQYXMmQfgtRNKNLNvCaa2GC-knsnzqT5c6I-ffLNhHsWKA0pa1MP3s5rhI']
INFO:oauth2client.client:Refreshing access_token
DEBUG:root:i finished updated the demo pages2015-06-07 15:31:57.260684
DEBUG:root:None

DEBUG:root:None

DEBUG:root:None

DEBUG:root:usage: git [--version] [--help] [-C <path>] [-c name=value]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p|--paginate|--no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

The most commonly used git commands are:
   add        Add file contents to the index
   bisect     Find by binary search the change that introduced a bug
   branch     List, create, or delete branches
   checkout   Checkout a branch or paths to the working tree
   clone      Clone a repository into a new directory
   commit     Record changes to the repository
   diff       Show changes between commits, commit and working tree, etc
   fetch      Download objects and refs from another repository
   grep       Print lines matching a pattern
   init       Create an empty Git repository or reinitialize an existing one
   log        Show commit logs
   merge      Join two or more development histories together
   mv         Move or rename a file, a directory, or a symlink
   pull       Fetch from and integrate with another repository or a local branch
   push       Update remote refs along with associated objects
   rebase     Forward-port local commits to the updated upstream head
   reset      Reset current HEAD to the specified state
   rm         Remove files from the working tree and from the index
   show       Show various types of objects
   status     Show the working tree status
   tag        Create, list, delete or verify a tag object signed with GPG

'git help -a' and 'git help -g' lists available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.

DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 15:32:02.372521
DEBUG:root:i finished updated the demo pages2015-06-07 15:32:36.417894
DEBUG:root:None

DEBUG:root:None

DEBUG:root:None

DEBUG:root:usage: git [--version] [--help] [-C <path>] [-c name=value]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p|--paginate|--no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

The most commonly used git commands are:
   add        Add file contents to the index
   bisect     Find by binary search the change that introduced a bug
   branch     List, create, or delete branches
   checkout   Checkout a branch or paths to the working tree
   clone      Clone a repository into a new directory
   commit     Record changes to the repository
   diff       Show changes between commits, commit and working tree, etc
   fetch      Download objects and refs from another repository
   grep       Print lines matching a pattern
   init       Create an empty Git repository or reinitialize an existing one
   log        Show commit logs
   merge      Join two or more development histories together
   mv         Move or rename a file, a directory, or a symlink
   pull       Fetch from and integrate with another repository or a local branch
   push       Update remote refs along with associated objects
   rebase     Forward-port local commits to the updated upstream head
   reset      Reset current HEAD to the specified state
   rm         Remove files from the working tree and from the index
   show       Show various types of objects
   status     Show the working tree status
   tag        Create, list, delete or verify a tag object signed with GPG

'git help -a' and 'git help -g' lists available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.

DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 15:32:41.326439
DEBUG:root:i finished updated the demo pages2015-06-07 15:33:14.282514
DEBUG:root:None

DEBUG:root:None

DEBUG:root:None

DEBUG:root:usage: git [--version] [--help] [-C <path>] [-c name=value]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p|--paginate|--no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

The most commonly used git commands are:
   add        Add file contents to the index
   bisect     Find by binary search the change that introduced a bug
   branch     List, create, or delete branches
   checkout   Checkout a branch or paths to the working tree
   clone      Clone a repository into a new directory
   commit     Record changes to the repository
   diff       Show changes between commits, commit and working tree, etc
   fetch      Download objects and refs from another repository
   grep       Print lines matching a pattern
   init       Create an empty Git repository or reinitialize an existing one
   log        Show commit logs
   merge      Join two or more development histories together
   mv         Move or rename a file, a directory, or a symlink
   pull       Fetch from and integrate with another repository or a local branch
   push       Update remote refs along with associated objects
   rebase     Forward-port local commits to the updated upstream head
   reset      Reset current HEAD to the specified state
   rm         Remove files from the working tree and from the index
   show       Show various types of objects
   status     Show the working tree status
   tag        Create, list, delete or verify a tag object signed with GPG

'git help -a' and 'git help -g' lists available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.

DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 15:33:19.057325
DEBUG:root:i finished updated the demo pages2015-06-07 15:33:51.919863
DEBUG:root:None

DEBUG:root:None

DEBUG:root:None

DEBUG:root:usage: git [--version] [--help] [-C <path>] [-c name=value]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p|--paginate|--no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

The most commonly used git commands are:
   add        Add file contents to the index
   bisect     Find by binary search the change that introduced a bug
   branch     List, create, or delete branches
   checkout   Checkout a branch or paths to the working tree
   clone      Clone a repository into a new directory
   commit     Record changes to the repository
   diff       Show changes between commits, commit and working tree, etc
   fetch      Download objects and refs from another repository
   grep       Print lines matching a pattern
   init       Create an empty Git repository or reinitialize an existing one
   log        Show commit logs
   merge      Join two or more development histories together
   mv         Move or rename a file, a directory, or a symlink
   pull       Fetch from and integrate with another repository or a local branch
   push       Update remote refs along with associated objects
   rebase     Forward-port local commits to the updated upstream head
   reset      Reset current HEAD to the specified state
   rm         Remove files from the working tree and from the index
   show       Show various types of objects
   status     Show the working tree status
   tag        Create, list, delete or verify a tag object signed with GPG

'git help -a' and 'git help -g' lists available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.

DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 15:33:56.771064
DEBUG:root:i finished updated the demo pages2015-06-07 15:34:30.333398
DEBUG:root:None

DEBUG:root:None

DEBUG:root:None

DEBUG:root:usage: git [--version] [--help] [-C <path>] [-c name=value]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p|--paginate|--no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

The most commonly used git commands are:
   add        Add file contents to the index
   bisect     Find by binary search the change that introduced a bug
   branch     List, create, or delete branches
   checkout   Checkout a branch or paths to the working tree
   clone      Clone a repository into a new directory
   commit     Record changes to the repository
   diff       Show changes between commits, commit and working tree, etc
   fetch      Download objects and refs from another repository
   grep       Print lines matching a pattern
   init       Create an empty Git repository or reinitialize an existing one
   log        Show commit logs
   merge      Join two or more development histories together
   mv         Move or rename a file, a directory, or a symlink
   pull       Fetch from and integrate with another repository or a local branch
   push       Update remote refs along with associated objects
   rebase     Forward-port local commits to the updated upstream head
   reset      Reset current HEAD to the specified state
   rm         Remove files from the working tree and from the index
   show       Show various types of objects
   status     Show the working tree status
   tag        Create, list, delete or verify a tag object signed with GPG

'git help -a' and 'git help -g' lists available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.

DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 15:34:35.399116
DEBUG:root:i finished updated the demo pages2015-06-07 15:35:08.245234
DEBUG:root:None

DEBUG:root:None

DEBUG:root:None

DEBUG:root:usage: git [--version] [--help] [-C <path>] [-c name=value]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p|--paginate|--no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

The most commonly used git commands are:
   add        Add file contents to the index
   bisect     Find by binary search the change that introduced a bug
   branch     List, create, or delete branches
   checkout   Checkout a branch or paths to the working tree
   clone      Clone a repository into a new directory
   commit     Record changes to the repository
   diff       Show changes between commits, commit and working tree, etc
   fetch      Download objects and refs from another repository
   grep       Print lines matching a pattern
   init       Create an empty Git repository or reinitialize an existing one
   log        Show commit logs
   merge      Join two or more development histories together
   mv         Move or rename a file, a directory, or a symlink
   pull       Fetch from and integrate with another repository or a local branch
   push       Update remote refs along with associated objects
   rebase     Forward-port local commits to the updated upstream head
   reset      Reset current HEAD to the specified state
   rm         Remove files from the working tree and from the index
   show       Show various types of objects
   status     Show the working tree status
   tag        Create, list, delete or verify a tag object signed with GPG

'git help -a' and 'git help -g' lists available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.

DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 15:35:13.178577
DEBUG:root:i finished updated the demo pages2015-06-07 15:35:46.449499
DEBUG:root:None

DEBUG:root:None

DEBUG:root:None

DEBUG:root:usage: git [--version] [--help] [-C <path>] [-c name=value]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p|--paginate|--no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

The most commonly used git commands are:
   add        Add file contents to the index
   bisect     Find by binary search the change that introduced a bug
   branch     List, create, or delete branches
   checkout   Checkout a branch or paths to the working tree
   clone      Clone a repository into a new directory
   commit     Record changes to the repository
   diff       Show changes between commits, commit and working tree, etc
   fetch      Download objects and refs from another repository
   grep       Print lines matching a pattern
   init       Create an empty Git repository or reinitialize an existing one
   log        Show commit logs
   merge      Join two or more development histories together
   mv         Move or rename a file, a directory, or a symlink
   pull       Fetch from and integrate with another repository or a local branch
   push       Update remote refs along with associated objects
   rebase     Forward-port local commits to the updated upstream head
   reset      Reset current HEAD to the specified state
   rm         Remove files from the working tree and from the index
   show       Show various types of objects
   status     Show the working tree status
   tag        Create, list, delete or verify a tag object signed with GPG

'git help -a' and 'git help -g' lists available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.

DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 15:35:51.308541
DEBUG:root:i finished updated the demo pages2015-06-07 15:36:24.615033
DEBUG:root:None

DEBUG:root:None

DEBUG:root:None

DEBUG:root:usage: git [--version] [--help] [-C <path>] [-c name=value]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p|--paginate|--no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

The most commonly used git commands are:
   add        Add file contents to the index
   bisect     Find by binary search the change that introduced a bug
   branch     List, create, or delete branches
   checkout   Checkout a branch or paths to the working tree
   clone      Clone a repository into a new directory
   commit     Record changes to the repository
   diff       Show changes between commits, commit and working tree, etc
   fetch      Download objects and refs from another repository
   grep       Print lines matching a pattern
   init       Create an empty Git repository or reinitialize an existing one
   log        Show commit logs
   merge      Join two or more development histories together
   mv         Move or rename a file, a directory, or a symlink
   pull       Fetch from and integrate with another repository or a local branch
   push       Update remote refs along with associated objects
   rebase     Forward-port local commits to the updated upstream head
   reset      Reset current HEAD to the specified state
   rm         Remove files from the working tree and from the index
   show       Show various types of objects
   status     Show the working tree status
   tag        Create, list, delete or verify a tag object signed with GPG

'git help -a' and 'git help -g' lists available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.

DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 15:36:29.591101
DEBUG:root:i finished updated the demo pages2015-06-07 15:37:02.660737
DEBUG:root:None

DEBUG:root:None

DEBUG:root:None

DEBUG:root:usage: git [--version] [--help] [-C <path>] [-c name=value]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p|--paginate|--no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

The most commonly used git commands are:
   add        Add file contents to the index
   bisect     Find by binary search the change that introduced a bug
   branch     List, create, or delete branches
   checkout   Checkout a branch or paths to the working tree
   clone      Clone a repository into a new directory
   commit     Record changes to the repository
   diff       Show changes between commits, commit and working tree, etc
   fetch      Download objects and refs from another repository
   grep       Print lines matching a pattern
   init       Create an empty Git repository or reinitialize an existing one
   log        Show commit logs
   merge      Join two or more development histories together
   mv         Move or rename a file, a directory, or a symlink
   pull       Fetch from and integrate with another repository or a local branch
   push       Update remote refs along with associated objects
   rebase     Forward-port local commits to the updated upstream head
   reset      Reset current HEAD to the specified state
   rm         Remove files from the working tree and from the index
   show       Show various types of objects
   status     Show the working tree status
   tag        Create, list, delete or verify a tag object signed with GPG

'git help -a' and 'git help -g' lists available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.

DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 15:37:07.959542
DEBUG:root:i finished updated the demo pages2015-06-07 15:37:41.713432
DEBUG:root:None

DEBUG:root:None

DEBUG:root:None

DEBUG:root:usage: git [--version] [--help] [-C <path>] [-c name=value]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p|--paginate|--no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

The most commonly used git commands are:
   add        Add file contents to the index
   bisect     Find by binary search the change that introduced a bug
   branch     List, create, or delete branches
   checkout   Checkout a branch or paths to the working tree
   clone      Clone a repository into a new directory
   commit     Record changes to the repository
   diff       Show changes between commits, commit and working tree, etc
   fetch      Download objects and refs from another repository
   grep       Print lines matching a pattern
   init       Create an empty Git repository or reinitialize an existing one
   log        Show commit logs
   merge      Join two or more development histories together
   mv         Move or rename a file, a directory, or a symlink
   pull       Fetch from and integrate with another repository or a local branch
   push       Update remote refs along with associated objects
   rebase     Forward-port local commits to the updated upstream head
   reset      Reset current HEAD to the specified state
   rm         Remove files from the working tree and from the index
   show       Show various types of objects
   status     Show the working tree status
   tag        Create, list, delete or verify a tag object signed with GPG

'git help -a' and 'git help -g' lists available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.

DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 15:37:46.730285
DEBUG:root:i finished updated the demo pages2015-06-07 15:38:19.790215
DEBUG:root:None

DEBUG:root:None

DEBUG:root:None

DEBUG:root:usage: git [--version] [--help] [-C <path>] [-c name=value]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p|--paginate|--no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

The most commonly used git commands are:
   add        Add file contents to the index
   bisect     Find by binary search the change that introduced a bug
   branch     List, create, or delete branches
   checkout   Checkout a branch or paths to the working tree
   clone      Clone a repository into a new directory
   commit     Record changes to the repository
   diff       Show changes between commits, commit and working tree, etc
   fetch      Download objects and refs from another repository
   grep       Print lines matching a pattern
   init       Create an empty Git repository or reinitialize an existing one
   log        Show commit logs
   merge      Join two or more development histories together
   mv         Move or rename a file, a directory, or a symlink
   pull       Fetch from and integrate with another repository or a local branch
   push       Update remote refs along with associated objects
   rebase     Forward-port local commits to the updated upstream head
   reset      Reset current HEAD to the specified state
   rm         Remove files from the working tree and from the index
   show       Show various types of objects
   status     Show the working tree status
   tag        Create, list, delete or verify a tag object signed with GPG

'git help -a' and 'git help -g' lists available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.

DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 15:38:24.691191
DEBUG:root:i finished updated the demo pages2015-06-07 15:38:58.142925
DEBUG:root:None

DEBUG:root:None

DEBUG:root:None

DEBUG:root:usage: git [--version] [--help] [-C <path>] [-c name=value]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p|--paginate|--no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

The most commonly used git commands are:
   add        Add file contents to the index
   bisect     Find by binary search the change that introduced a bug
   branch     List, create, or delete branches
   checkout   Checkout a branch or paths to the working tree
   clone      Clone a repository into a new directory
   commit     Record changes to the repository
   diff       Show changes between commits, commit and working tree, etc
   fetch      Download objects and refs from another repository
   grep       Print lines matching a pattern
   init       Create an empty Git repository or reinitialize an existing one
   log        Show commit logs
   merge      Join two or more development histories together
   mv         Move or rename a file, a directory, or a symlink
   pull       Fetch from and integrate with another repository or a local branch
   push       Update remote refs along with associated objects
   rebase     Forward-port local commits to the updated upstream head
   reset      Reset current HEAD to the specified state
   rm         Remove files from the working tree and from the index
   show       Show various types of objects
   status     Show the working tree status
   tag        Create, list, delete or verify a tag object signed with GPG

'git help -a' and 'git help -g' lists available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.

DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 15:39:03.123169
DEBUG:root:i finished updated the demo pages2015-06-07 15:39:36.972670
DEBUG:root:None

DEBUG:root:None

DEBUG:root:None

DEBUG:root:usage: git [--version] [--help] [-C <path>] [-c name=value]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p|--paginate|--no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

The most commonly used git commands are:
   add        Add file contents to the index
   bisect     Find by binary search the change that introduced a bug
   branch     List, create, or delete branches
   checkout   Checkout a branch or paths to the working tree
   clone      Clone a repository into a new directory
   commit     Record changes to the repository
   diff       Show changes between commits, commit and working tree, etc
   fetch      Download objects and refs from another repository
   grep       Print lines matching a pattern
   init       Create an empty Git repository or reinitialize an existing one
   log        Show commit logs
   merge      Join two or more development histories together
   mv         Move or rename a file, a directory, or a symlink
   pull       Fetch from and integrate with another repository or a local branch
   push       Update remote refs along with associated objects
   rebase     Forward-port local commits to the updated upstream head
   reset      Reset current HEAD to the specified state
   rm         Remove files from the working tree and from the index
   show       Show various types of objects
   status     Show the working tree status
   tag        Create, list, delete or verify a tag object signed with GPG

'git help -a' and 'git help -g' lists available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.

DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 15:39:41.947576
DEBUG:root:i finished updated the demo pages2015-06-07 15:40:15.456573
DEBUG:root:None

DEBUG:root:None

DEBUG:root:None

DEBUG:root:usage: git [--version] [--help] [-C <path>] [-c name=value]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p|--paginate|--no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

The most commonly used git commands are:
   add        Add file contents to the index
   bisect     Find by binary search the change that introduced a bug
   branch     List, create, or delete branches
   checkout   Checkout a branch or paths to the working tree
   clone      Clone a repository into a new directory
   commit     Record changes to the repository
   diff       Show changes between commits, commit and working tree, etc
   fetch      Download objects and refs from another repository
   grep       Print lines matching a pattern
   init       Create an empty Git repository or reinitialize an existing one
   log        Show commit logs
   merge      Join two or more development histories together
   mv         Move or rename a file, a directory, or a symlink
   pull       Fetch from and integrate with another repository or a local branch
   push       Update remote refs along with associated objects
   rebase     Forward-port local commits to the updated upstream head
   reset      Reset current HEAD to the specified state
   rm         Remove files from the working tree and from the index
   show       Show various types of objects
   status     Show the working tree status
   tag        Create, list, delete or verify a tag object signed with GPG

'git help -a' and 'git help -g' lists available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.

DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 15:40:20.401915
DEBUG:root:i finished updated the demo pages2015-06-07 15:40:53.771151
DEBUG:root:None

DEBUG:root:None

DEBUG:root:None

DEBUG:root:usage: git [--version] [--help] [-C <path>] [-c name=value]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p|--paginate|--no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

The most commonly used git commands are:
   add        Add file contents to the index
   bisect     Find by binary search the change that introduced a bug
   branch     List, create, or delete branches
   checkout   Checkout a branch or paths to the working tree
   clone      Clone a repository into a new directory
   commit     Record changes to the repository
   diff       Show changes between commits, commit and working tree, etc
   fetch      Download objects and refs from another repository
   grep       Print lines matching a pattern
   init       Create an empty Git repository or reinitialize an existing one
   log        Show commit logs
   merge      Join two or more development histories together
   mv         Move or rename a file, a directory, or a symlink
   pull       Fetch from and integrate with another repository or a local branch
   push       Update remote refs along with associated objects
   rebase     Forward-port local commits to the updated upstream head
   reset      Reset current HEAD to the specified state
   rm         Remove files from the working tree and from the index
   show       Show various types of objects
   status     Show the working tree status
   tag        Create, list, delete or verify a tag object signed with GPG

'git help -a' and 'git help -g' lists available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.

DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 15:40:58.753656
DEBUG:root:loggerdoer worked
DEBUG:root:fileiowas imported
DEBUG:root:heres the cwd/home/ubuntu/forgescan.github.io
DEBUG:root:HERE I SHOULD BE LOGGING SOMTHING
DEBUG:oauth2client.client:{'iss': u'205443885400-cdl80r1q3am00nv1tnont4i2urafla3j@developer.gserviceaccount.com', 'scope': 'https://spreadsheets.google.com/feeds', 'aud': 'https://accounts.google.com/o/oauth2/token', 'exp': 1433695290, 'iat': 1433691690}
DEBUG:oauth2client.crypt:[u'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9', u'eyJpc3MiOiIyMDU0NDM4ODU0MDAtY2RsODByMXEzYW0wMG52MXRub250NGkydXJhZmxhM2pAZGV2ZWxvcGVyLmdzZXJ2aWNlYWNjb3VudC5jb20iLCJzY29wZSI6Imh0dHBzOi8vc3ByZWFkc2hlZXRzLmdvb2dsZS5jb20vZmVlZHMiLCJhdWQiOiJodHRwczovL2FjY291bnRzLmdvb2dsZS5jb20vby9vYXV0aDIvdG9rZW4iLCJleHAiOjE0MzM2OTUyOTAsImlhdCI6MTQzMzY5MTY5MH0', u'PsQ95oVaDL_8QaK0mNutxBCOICZjs3Dcz6prPetPOp-DAy9W0omqi16IrxrpQA-j0jN7NZOs9Dq4SlL1JR_g9HJ8XZVYvFmypScxPIWrgp1n4V3cTikPq8rjYCTRmZ7dLc7MpbpGtB69-qdrx4VB5DkD7Dv_cVzo3dXOeQAldCE']
INFO:oauth2client.client:Refreshing access_token
DEBUG:root:i finished updated the demo pages2015-06-07 15:41:53.754711
DEBUG:root:git failTraceback (most recent call last):
  File "/home/ubuntu/forgescan.github.io/HAPYAKFUNCTIONS.py", line 185, in gitupdate
    p = subprocess.Popen(['cd','/home/ubuntu/forgescan.github.io'], stdout=subprocess.PIPE,stderr=subprocess.PIPE,**kwargs)
  File "/usr/lib/python2.7/subprocess.py", line 710, in __init__
    errread, errwrite)
  File "/usr/lib/python2.7/subprocess.py", line 1327, in _execute_child
    raise child_exception
OSError: [Errno 2] No such file or directory

DEBUG:root:i finished updated the git2015-06-07 15:41:53.795778
DEBUG:root:i finished updated the demo pages2015-06-07 15:42:27.005310
DEBUG:root:git failTraceback (most recent call last):
  File "/home/ubuntu/forgescan.github.io/HAPYAKFUNCTIONS.py", line 185, in gitupdate
    p = subprocess.Popen(['cd','/home/ubuntu/forgescan.github.io'], stdout=subprocess.PIPE,stderr=subprocess.PIPE,**kwargs)
  File "/usr/lib/python2.7/subprocess.py", line 710, in __init__
    errread, errwrite)
  File "/usr/lib/python2.7/subprocess.py", line 1327, in _execute_child
    raise child_exception
OSError: [Errno 2] No such file or directory

DEBUG:root:i finished updated the git2015-06-07 15:42:27.048323
DEBUG:root:i finished updated the demo pages2015-06-07 15:43:00.459984
DEBUG:root:git failTraceback (most recent call last):
  File "/home/ubuntu/forgescan.github.io/HAPYAKFUNCTIONS.py", line 185, in gitupdate
    p = subprocess.Popen(['cd','/home/ubuntu/forgescan.github.io'], stdout=subprocess.PIPE,stderr=subprocess.PIPE,**kwargs)
  File "/usr/lib/python2.7/subprocess.py", line 710, in __init__
    errread, errwrite)
  File "/usr/lib/python2.7/subprocess.py", line 1327, in _execute_child
    raise child_exception
OSError: [Errno 2] No such file or directory

DEBUG:root:i finished updated the git2015-06-07 15:43:00.540078
DEBUG:root:i finished updated the demo pages2015-06-07 15:43:34.543688
DEBUG:root:git failTraceback (most recent call last):
  File "/home/ubuntu/forgescan.github.io/HAPYAKFUNCTIONS.py", line 185, in gitupdate
    p = subprocess.Popen(['cd','/home/ubuntu/forgescan.github.io'], stdout=subprocess.PIPE,stderr=subprocess.PIPE,**kwargs)
  File "/usr/lib/python2.7/subprocess.py", line 710, in __init__
    errread, errwrite)
  File "/usr/lib/python2.7/subprocess.py", line 1327, in _execute_child
    raise child_exception
OSError: [Errno 2] No such file or directory

DEBUG:root:i finished updated the git2015-06-07 15:43:34.590433
DEBUG:root:i finished updated the demo pages2015-06-07 15:44:05.030262
DEBUG:root:git failTraceback (most recent call last):
  File "/home/ubuntu/forgescan.github.io/HAPYAKFUNCTIONS.py", line 185, in gitupdate
    p = subprocess.Popen(['cd','/home/ubuntu/forgescan.github.io'], stdout=subprocess.PIPE,stderr=subprocess.PIPE,**kwargs)
  File "/usr/lib/python2.7/subprocess.py", line 710, in __init__
    errread, errwrite)
  File "/usr/lib/python2.7/subprocess.py", line 1327, in _execute_child
    raise child_exception
OSError: [Errno 2] No such file or directory

DEBUG:root:i finished updated the git2015-06-07 15:44:05.094040
DEBUG:root:i finished updated the demo pages2015-06-07 15:44:32.355316
DEBUG:root:git failTraceback (most recent call last):
  File "/home/ubuntu/forgescan.github.io/HAPYAKFUNCTIONS.py", line 185, in gitupdate
    p = subprocess.Popen(['cd','/home/ubuntu/forgescan.github.io'], stdout=subprocess.PIPE,stderr=subprocess.PIPE,**kwargs)
  File "/usr/lib/python2.7/subprocess.py", line 710, in __init__
    errread, errwrite)
  File "/usr/lib/python2.7/subprocess.py", line 1327, in _execute_child
    raise child_exception
OSError: [Errno 2] No such file or directory

DEBUG:root:i finished updated the git2015-06-07 15:44:32.390595
DEBUG:root:i finished updated the demo pages2015-06-07 15:44:59.402372
DEBUG:root:git failTraceback (most recent call last):
  File "/home/ubuntu/forgescan.github.io/HAPYAKFUNCTIONS.py", line 185, in gitupdate
    p = subprocess.Popen(['cd','/home/ubuntu/forgescan.github.io'], stdout=subprocess.PIPE,stderr=subprocess.PIPE,**kwargs)
  File "/usr/lib/python2.7/subprocess.py", line 710, in __init__
    errread, errwrite)
  File "/usr/lib/python2.7/subprocess.py", line 1327, in _execute_child
    raise child_exception
OSError: [Errno 2] No such file or directory

DEBUG:root:i finished updated the git2015-06-07 15:44:59.436923
DEBUG:root:i finished updated the demo pages2015-06-07 15:45:27.368079
DEBUG:root:git failTraceback (most recent call last):
  File "/home/ubuntu/forgescan.github.io/HAPYAKFUNCTIONS.py", line 185, in gitupdate
    p = subprocess.Popen(['cd','/home/ubuntu/forgescan.github.io'], stdout=subprocess.PIPE,stderr=subprocess.PIPE,**kwargs)
  File "/usr/lib/python2.7/subprocess.py", line 710, in __init__
    errread, errwrite)
  File "/usr/lib/python2.7/subprocess.py", line 1327, in _execute_child
    raise child_exception
OSError: [Errno 2] No such file or directory

DEBUG:root:i finished updated the git2015-06-07 15:45:27.407063
DEBUG:root:i finished updated the demo pages2015-06-07 15:45:54.928496
DEBUG:root:git failTraceback (most recent call last):
  File "/home/ubuntu/forgescan.github.io/HAPYAKFUNCTIONS.py", line 185, in gitupdate
    p = subprocess.Popen(['cd','/home/ubuntu/forgescan.github.io'], stdout=subprocess.PIPE,stderr=subprocess.PIPE,**kwargs)
  File "/usr/lib/python2.7/subprocess.py", line 710, in __init__
    errread, errwrite)
  File "/usr/lib/python2.7/subprocess.py", line 1327, in _execute_child
    raise child_exception
OSError: [Errno 2] No such file or directory

DEBUG:root:i finished updated the git2015-06-07 15:45:54.963012
DEBUG:root:i finished updated the demo pages2015-06-07 15:46:22.241459
DEBUG:root:git failTraceback (most recent call last):
  File "/home/ubuntu/forgescan.github.io/HAPYAKFUNCTIONS.py", line 185, in gitupdate
    p = subprocess.Popen(['cd','/home/ubuntu/forgescan.github.io'], stdout=subprocess.PIPE,stderr=subprocess.PIPE,**kwargs)
  File "/usr/lib/python2.7/subprocess.py", line 710, in __init__
    errread, errwrite)
  File "/usr/lib/python2.7/subprocess.py", line 1327, in _execute_child
    raise child_exception
OSError: [Errno 2] No such file or directory

DEBUG:root:i finished updated the git2015-06-07 15:46:22.303792
DEBUG:root:i finished updated the demo pages2015-06-07 15:46:51.321811
DEBUG:root:git failTraceback (most recent call last):
  File "/home/ubuntu/forgescan.github.io/HAPYAKFUNCTIONS.py", line 185, in gitupdate
    p = subprocess.Popen(['cd /home/ubuntu/forgescan.github.io'], stdout=subprocess.PIPE,stderr=subprocess.PIPE,**kwargs)
  File "/usr/lib/python2.7/subprocess.py", line 710, in __init__
    errread, errwrite)
  File "/usr/lib/python2.7/subprocess.py", line 1327, in _execute_child
    raise child_exception
OSError: [Errno 2] No such file or directory

DEBUG:root:i finished updated the git2015-06-07 15:46:51.385674
DEBUG:root:loggerdoer worked
DEBUG:root:fileiowas imported
DEBUG:root:heres the cwd/home/ubuntu/forgescan.github.io
DEBUG:root:HERE I SHOULD BE LOGGING SOMTHING
DEBUG:oauth2client.client:{'iss': u'205443885400-cdl80r1q3am00nv1tnont4i2urafla3j@developer.gserviceaccount.com', 'scope': 'https://spreadsheets.google.com/feeds', 'aud': 'https://accounts.google.com/o/oauth2/token', 'exp': 1433695623, 'iat': 1433692023}
DEBUG:oauth2client.crypt:[u'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9', u'eyJpc3MiOiIyMDU0NDM4ODU0MDAtY2RsODByMXEzYW0wMG52MXRub250NGkydXJhZmxhM2pAZGV2ZWxvcGVyLmdzZXJ2aWNlYWNjb3VudC5jb20iLCJzY29wZSI6Imh0dHBzOi8vc3ByZWFkc2hlZXRzLmdvb2dsZS5jb20vZmVlZHMiLCJhdWQiOiJodHRwczovL2FjY291bnRzLmdvb2dsZS5jb20vby9vYXV0aDIvdG9rZW4iLCJleHAiOjE0MzM2OTU2MjMsImlhdCI6MTQzMzY5MjAyM30', u'c0ASnSrwYlM8JUp0adK72sVDLSMh6HNnkLId7X-DBktpcUOcJddfDK_R9BT4EdPFHO5x2RYB1MNCjHQYMH5zs2vRPHEKe4Cn9oMvdkPMZso0QkHH3G1LlziZoEsaPx3kSs3ObsJ5LV6c_xBn02rWtPfCjfpWFW_Wst4JOqRsfdc']
INFO:oauth2client.client:Refreshing access_token
DEBUG:root:i finished updated the demo pages2015-06-07 15:47:23.269844
DEBUG:root:git failTraceback (most recent call last):
  File "/home/ubuntu/forgescan.github.io/HAPYAKFUNCTIONS.py", line 185, in gitupdate
    p = subprocess.Popen(['cd /home/ubuntu/forgescan.github.io'], stdout=subprocess.PIPE,stderr=subprocess.PIPE,**kwargs)
  File "/usr/lib/python2.7/subprocess.py", line 710, in __init__
    errread, errwrite)
  File "/usr/lib/python2.7/subprocess.py", line 1327, in _execute_child
    raise child_exception
OSError: [Errno 2] No such file or directory

DEBUG:root:i finished updated the git2015-06-07 15:47:23.403453
DEBUG:root:i finished updated the demo pages2015-06-07 15:47:51.370548
DEBUG:root:git failTraceback (most recent call last):
  File "/home/ubuntu/forgescan.github.io/HAPYAKFUNCTIONS.py", line 185, in gitupdate
    p = subprocess.Popen(['cd /home/ubuntu/forgescan.github.io'], stdout=subprocess.PIPE,stderr=subprocess.PIPE,**kwargs)
  File "/usr/lib/python2.7/subprocess.py", line 710, in __init__
    errread, errwrite)
  File "/usr/lib/python2.7/subprocess.py", line 1327, in _execute_child
    raise child_exception
OSError: [Errno 2] No such file or directory

DEBUG:root:i finished updated the git2015-06-07 15:47:51.402255
DEBUG:root:i finished updated the demo pages2015-06-07 15:48:23.448923
DEBUG:root:git failTraceback (most recent call last):
  File "/home/ubuntu/forgescan.github.io/HAPYAKFUNCTIONS.py", line 185, in gitupdate
    p = subprocess.Popen(['cd /home/ubuntu/forgescan.github.io'], stdout=subprocess.PIPE,stderr=subprocess.PIPE,**kwargs)
  File "/usr/lib/python2.7/subprocess.py", line 710, in __init__
    errread, errwrite)
  File "/usr/lib/python2.7/subprocess.py", line 1327, in _execute_child
    raise child_exception
OSError: [Errno 2] No such file or directory

DEBUG:root:i finished updated the git2015-06-07 15:48:23.511265
DEBUG:root:i finished updated the demo pages2015-06-07 15:48:50.432251
DEBUG:root:git failTraceback (most recent call last):
  File "/home/ubuntu/forgescan.github.io/HAPYAKFUNCTIONS.py", line 185, in gitupdate
    p = subprocess.Popen(['pwd'], stdout=subprocess.PIPE,stderr=subprocess.PIPE,**kwargs)
  File "/usr/lib/python2.7/subprocess.py", line 710, in __init__
    errread, errwrite)
  File "/usr/lib/python2.7/subprocess.py", line 1327, in _execute_child
    raise child_exception
OSError: [Errno 2] No such file or directory

DEBUG:root:i finished updated the git2015-06-07 15:48:50.494686
DEBUG:root:i finished updated the demo pages2015-06-07 15:49:22.494675
DEBUG:root:git failTraceback (most recent call last):
  File "/home/ubuntu/forgescan.github.io/HAPYAKFUNCTIONS.py", line 185, in gitupdate
    p = subprocess.Popen(['pwd'], stdout=subprocess.PIPE,stderr=subprocess.PIPE,**kwargs)
  File "/usr/lib/python2.7/subprocess.py", line 710, in __init__
    errread, errwrite)
  File "/usr/lib/python2.7/subprocess.py", line 1327, in _execute_child
    raise child_exception
OSError: [Errno 2] No such file or directory

DEBUG:root:i finished updated the git2015-06-07 15:49:22.537100
DEBUG:root:i finished updated the demo pages2015-06-07 15:49:55.392913
DEBUG:root:git failTraceback (most recent call last):
  File "/home/ubuntu/forgescan.github.io/HAPYAKFUNCTIONS.py", line 185, in gitupdate
    p = subprocess.Popen(['pwd'], stdout=subprocess.PIPE,stderr=subprocess.PIPE,**kwargs)
  File "/usr/lib/python2.7/subprocess.py", line 710, in __init__
    errread, errwrite)
  File "/usr/lib/python2.7/subprocess.py", line 1327, in _execute_child
    raise child_exception
OSError: [Errno 2] No such file or directory

DEBUG:root:i finished updated the git2015-06-07 15:49:55.435224
DEBUG:root:i finished updated the demo pages2015-06-07 15:50:28.560402
DEBUG:root:git failTraceback (most recent call last):
  File "/home/ubuntu/forgescan.github.io/HAPYAKFUNCTIONS.py", line 185, in gitupdate
    p = subprocess.Popen(['pwd'], stdout=subprocess.PIPE,stderr=subprocess.PIPE,**kwargs)
  File "/usr/lib/python2.7/subprocess.py", line 710, in __init__
    errread, errwrite)
  File "/usr/lib/python2.7/subprocess.py", line 1327, in _execute_child
    raise child_exception
OSError: [Errno 2] No such file or directory

DEBUG:root:i finished updated the git2015-06-07 15:50:28.602503
DEBUG:root:i finished updated the demo pages2015-06-07 15:51:01.166047
DEBUG:root:git failTraceback (most recent call last):
  File "/home/ubuntu/forgescan.github.io/HAPYAKFUNCTIONS.py", line 185, in gitupdate
    p = subprocess.Popen(['usr/bin/pwd'], stdout=subprocess.PIPE,stderr=subprocess.PIPE,**kwargs)
  File "/usr/lib/python2.7/subprocess.py", line 710, in __init__
    errread, errwrite)
  File "/usr/lib/python2.7/subprocess.py", line 1327, in _execute_child
    raise child_exception
OSError: [Errno 2] No such file or directory

DEBUG:root:i finished updated the git2015-06-07 15:51:01.244696
DEBUG:root:i finished updated the demo pages2015-06-07 15:51:34.100418
DEBUG:root:git failTraceback (most recent call last):
  File "/home/ubuntu/forgescan.github.io/HAPYAKFUNCTIONS.py", line 185, in gitupdate
    p = subprocess.Popen(['usr/bin/pwd'], stdout=subprocess.PIPE,stderr=subprocess.PIPE,**kwargs)
  File "/usr/lib/python2.7/subprocess.py", line 710, in __init__
    errread, errwrite)
  File "/usr/lib/python2.7/subprocess.py", line 1327, in _execute_child
    raise child_exception
OSError: [Errno 2] No such file or directory

DEBUG:root:i finished updated the git2015-06-07 15:51:34.178866
DEBUG:root:i finished updated the demo pages2015-06-07 15:52:07.312003
DEBUG:root:git failTraceback (most recent call last):
  File "/home/ubuntu/forgescan.github.io/HAPYAKFUNCTIONS.py", line 185, in gitupdate
    p = subprocess.Popen(['usr/bin/pwd'], stdout=subprocess.PIPE,stderr=subprocess.PIPE,**kwargs)
  File "/usr/lib/python2.7/subprocess.py", line 710, in __init__
    errread, errwrite)
  File "/usr/lib/python2.7/subprocess.py", line 1327, in _execute_child
    raise child_exception
OSError: [Errno 2] No such file or directory

DEBUG:root:i finished updated the git2015-06-07 15:52:07.392173
DEBUG:root:loggerdoer worked
DEBUG:root:fileiowas imported
DEBUG:root:heres the cwd/home/ubuntu/forgescan.github.io
DEBUG:root:HERE I SHOULD BE LOGGING SOMTHING
DEBUG:oauth2client.client:{'iss': u'205443885400-cdl80r1q3am00nv1tnont4i2urafla3j@developer.gserviceaccount.com', 'scope': 'https://spreadsheets.google.com/feeds', 'aud': 'https://accounts.google.com/o/oauth2/token', 'exp': 1433695936, 'iat': 1433692336}
DEBUG:oauth2client.crypt:[u'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9', u'eyJpc3MiOiIyMDU0NDM4ODU0MDAtY2RsODByMXEzYW0wMG52MXRub250NGkydXJhZmxhM2pAZGV2ZWxvcGVyLmdzZXJ2aWNlYWNjb3VudC5jb20iLCJzY29wZSI6Imh0dHBzOi8vc3ByZWFkc2hlZXRzLmdvb2dsZS5jb20vZmVlZHMiLCJhdWQiOiJodHRwczovL2FjY291bnRzLmdvb2dsZS5jb20vby9vYXV0aDIvdG9rZW4iLCJleHAiOjE0MzM2OTU5MzYsImlhdCI6MTQzMzY5MjMzNn0', u'r1gaWxg7VFVbKezu78W_DN4lXfnenZDXpynjUpKR4RzFBmMnqLovL1lfM120spVegpXmKATu9SK8SamBiWf7hQMPw4rreBO_qCOddpQUHr0Rog02XqkzfgutMLF6vfriBFRkQAo6DbD1EIV-wLuOINJJ0ytzssMzTjCG7X7D7a8']
INFO:oauth2client.client:Refreshing access_token
DEBUG:root:i finished updated the demo pages2015-06-07 15:52:39.176189
DEBUG:root:git failTraceback (most recent call last):
  File "/home/ubuntu/forgescan.github.io/HAPYAKFUNCTIONS.py", line 185, in gitupdate
    p = subprocess.Popen(['usr/bin/pwd'], stdout=subprocess.PIPE,stderr=subprocess.PIPE,**kwargs)
  File "/usr/lib/python2.7/subprocess.py", line 710, in __init__
    errread, errwrite)
  File "/usr/lib/python2.7/subprocess.py", line 1327, in _execute_child
    raise child_exception
OSError: [Errno 2] No such file or directory

DEBUG:root:i finished updated the git2015-06-07 15:52:39.254734
DEBUG:root:i finished updated the demo pages2015-06-07 15:53:12.061969
DEBUG:root:git failTraceback (most recent call last):
  File "/home/ubuntu/forgescan.github.io/HAPYAKFUNCTIONS.py", line 185, in gitupdate
    p = subprocess.Popen(['usr/bin/pwd'], stdout=subprocess.PIPE,stderr=subprocess.PIPE,**kwargs)
  File "/usr/lib/python2.7/subprocess.py", line 710, in __init__
    errread, errwrite)
  File "/usr/lib/python2.7/subprocess.py", line 1327, in _execute_child
    raise child_exception
OSError: [Errno 2] No such file or directory

DEBUG:root:i finished updated the git2015-06-07 15:53:12.104405
DEBUG:root:i finished updated the demo pages2015-06-07 15:53:46.329424
DEBUG:root:git failTraceback (most recent call last):
  File "/home/ubuntu/forgescan.github.io/HAPYAKFUNCTIONS.py", line 185, in gitupdate
    p = subprocess.Popen(['usr/bin/pwd'], stdout=subprocess.PIPE,stderr=subprocess.PIPE,**kwargs)
  File "/usr/lib/python2.7/subprocess.py", line 710, in __init__
    errread, errwrite)
  File "/usr/lib/python2.7/subprocess.py", line 1327, in _execute_child
    raise child_exception
OSError: [Errno 2] No such file or directory

DEBUG:root:i finished updated the git2015-06-07 15:53:46.410056
DEBUG:root:i finished updated the demo pages2015-06-07 15:54:19.963912
DEBUG:root:git failTraceback (most recent call last):
  File "/home/ubuntu/forgescan.github.io/HAPYAKFUNCTIONS.py", line 185, in gitupdate
    p = subprocess.Popen(['usr/bin/pwd'], stdout=subprocess.PIPE,stderr=subprocess.PIPE,**kwargs)
  File "/usr/lib/python2.7/subprocess.py", line 710, in __init__
    errread, errwrite)
  File "/usr/lib/python2.7/subprocess.py", line 1327, in _execute_child
    raise child_exception
OSError: [Errno 2] No such file or directory

DEBUG:root:i finished updated the git2015-06-07 15:54:20.006026
DEBUG:root:i finished updated the demo pages2015-06-07 15:54:52.735017
DEBUG:root:git failTraceback (most recent call last):
  File "/home/ubuntu/forgescan.github.io/HAPYAKFUNCTIONS.py", line 185, in gitupdate
    p = subprocess.Popen(['usr/bin/pwd'], stdout=subprocess.PIPE,stderr=subprocess.PIPE,**kwargs)
  File "/usr/lib/python2.7/subprocess.py", line 710, in __init__
    errread, errwrite)
  File "/usr/lib/python2.7/subprocess.py", line 1327, in _execute_child
    raise child_exception
OSError: [Errno 2] No such file or directory

DEBUG:root:i finished updated the git2015-06-07 15:54:52.813752
DEBUG:root:i finished updated the demo pages2015-06-07 15:55:25.951067
DEBUG:root:git failTraceback (most recent call last):
  File "/home/ubuntu/forgescan.github.io/HAPYAKFUNCTIONS.py", line 185, in gitupdate
    p = subprocess.Popen(['usr/bin/pwd'], stdout=subprocess.PIPE,stderr=subprocess.PIPE,**kwargs)
  File "/usr/lib/python2.7/subprocess.py", line 710, in __init__
    errread, errwrite)
  File "/usr/lib/python2.7/subprocess.py", line 1327, in _execute_child
    raise child_exception
OSError: [Errno 2] No such file or directory

DEBUG:root:i finished updated the git2015-06-07 15:55:25.993398
DEBUG:root:loggerdoer worked
DEBUG:root:fileiowas imported
DEBUG:root:heres the cwd/home/ubuntu/forgescan.github.io
DEBUG:root:HERE I SHOULD BE LOGGING SOMTHING
DEBUG:oauth2client.client:{'iss': u'205443885400-cdl80r1q3am00nv1tnont4i2urafla3j@developer.gserviceaccount.com', 'scope': 'https://spreadsheets.google.com/feeds', 'aud': 'https://accounts.google.com/o/oauth2/token', 'exp': 1433696148, 'iat': 1433692548}
DEBUG:oauth2client.crypt:[u'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9', u'eyJpc3MiOiIyMDU0NDM4ODU0MDAtY2RsODByMXEzYW0wMG52MXRub250NGkydXJhZmxhM2pAZGV2ZWxvcGVyLmdzZXJ2aWNlYWNjb3VudC5jb20iLCJzY29wZSI6Imh0dHBzOi8vc3ByZWFkc2hlZXRzLmdvb2dsZS5jb20vZmVlZHMiLCJhdWQiOiJodHRwczovL2FjY291bnRzLmdvb2dsZS5jb20vby9vYXV0aDIvdG9rZW4iLCJleHAiOjE0MzM2OTYxNDgsImlhdCI6MTQzMzY5MjU0OH0', u'DkNDCwo1AXy0LK8NpyXjp7klxGq-3llg9Ti2pPgDnPAJQER4Jet9w6QZ9uDGkflbVdNfQn-B0OtBF_ASN7QnWNO6DD9bwQmvQ-rGzRFPXj1hOAjoD3bOR5ewq2gt5v-LsgzlU_2GkTgrPQ9y67KO2SAu-hvRHIr9r9rD-usGnGo']
INFO:oauth2client.client:Refreshing access_token
DEBUG:root:i finished updated the demo pages2015-06-07 15:56:12.011867
DEBUG:root:heres the currentworkingderectory/home/ubuntu/forgescan.github.io

DEBUG:root:
DEBUG:root:[master 02cf4a8] hapyak
 Committer: root <root@ip-172-31-18-114.us-west-2.compute.internal>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 3 files changed, 388 insertions(+), 8 deletions(-)

DEBUG:root:
DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 15:56:15.444874
DEBUG:root:i finished updated the demo pages2015-06-07 15:56:48.741387
DEBUG:root:heres the currentworkingderectory/home/ubuntu/forgescan.github.io

DEBUG:root:
DEBUG:root:[master aaab6a4] hapyak
 Committer: root <root@ip-172-31-18-114.us-west-2.compute.internal>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 22 insertions(+)

DEBUG:root:
DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 15:56:51.970797
DEBUG:root:i finished updated the demo pages2015-06-07 15:57:25.429407
DEBUG:root:heres the currentworkingderectory/home/ubuntu/forgescan.github.io

DEBUG:root:
DEBUG:root:[master 6ff05ec] hapyak
 Committer: root <root@ip-172-31-18-114.us-west-2.compute.internal>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 22 insertions(+)

DEBUG:root:
DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 15:57:28.770150
DEBUG:root:i finished updated the demo pages2015-06-07 15:58:08.454101
DEBUG:root:heres the currentworkingderectory/home/ubuntu/forgescan.github.io

DEBUG:root:
DEBUG:root:[master 62025ab] hapyak
 Committer: root <root@ip-172-31-18-114.us-west-2.compute.internal>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 22 insertions(+)

DEBUG:root:
DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 15:58:11.726877
DEBUG:root:i finished updated the demo pages2015-06-07 15:58:45.056864
DEBUG:root:heres the currentworkingderectory/home/ubuntu/forgescan.github.io

DEBUG:root:
DEBUG:root:[master d4a9001] hapyak
 Committer: root <root@ip-172-31-18-114.us-west-2.compute.internal>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 22 insertions(+)

DEBUG:root:
DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 15:58:48.526168
DEBUG:root:i finished updated the demo pages2015-06-07 15:59:16.341903
DEBUG:root:heres the currentworkingderectory/home/ubuntu/forgescan.github.io

DEBUG:root:
DEBUG:root:[master 88e1f0f] hapyak
 Committer: root <root@ip-172-31-18-114.us-west-2.compute.internal>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 22 insertions(+)

DEBUG:root:
DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 15:59:18.983607
DEBUG:root:i finished updated the demo pages2015-06-07 15:59:46.130045
DEBUG:root:heres the currentworkingderectory/home/ubuntu/forgescan.github.io

DEBUG:root:
DEBUG:root:[master b511c29] hapyak
 Committer: root <root@ip-172-31-18-114.us-west-2.compute.internal>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 2 files changed, 23 insertions(+), 1 deletion(-)

DEBUG:root:
DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 15:59:48.879657
DEBUG:root:loggerdoer worked
DEBUG:root:fileiowas imported
DEBUG:root:heres the cwd/home/ubuntu/forgescan.github.io
DEBUG:root:HERE I SHOULD BE LOGGING SOMTHING
DEBUG:oauth2client.client:{'iss': u'205443885400-cdl80r1q3am00nv1tnont4i2urafla3j@developer.gserviceaccount.com', 'scope': 'https://spreadsheets.google.com/feeds', 'aud': 'https://accounts.google.com/o/oauth2/token', 'exp': 1433696399, 'iat': 1433692799}
DEBUG:oauth2client.crypt:[u'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9', u'eyJpc3MiOiIyMDU0NDM4ODU0MDAtY2RsODByMXEzYW0wMG52MXRub250NGkydXJhZmxhM2pAZGV2ZWxvcGVyLmdzZXJ2aWNlYWNjb3VudC5jb20iLCJzY29wZSI6Imh0dHBzOi8vc3ByZWFkc2hlZXRzLmdvb2dsZS5jb20vZmVlZHMiLCJhdWQiOiJodHRwczovL2FjY291bnRzLmdvb2dsZS5jb20vby9vYXV0aDIvdG9rZW4iLCJleHAiOjE0MzM2OTYzOTksImlhdCI6MTQzMzY5Mjc5OX0', u'YM9zEUhzoohmiAyrbw89ac88lTjavUZHU_MWbyhva_GhsBvFagR366FMSmMdKL-pjG0cMWCt63Vk_84m_WBjkFxz-um604VNEzOReLvoiHe1iSIMKRcuhn-WQPxLvgYOloE1Lk6srx-KNjyK5flYcZwkXbca5-dX5xY0U_XI0fc']
INFO:oauth2client.client:Refreshing access_token
DEBUG:root:i finished updated the demo pages2015-06-07 16:00:18.595394
DEBUG:root:heres the currentworkingderectory/home/ubuntu/forgescan.github.io

DEBUG:root:
DEBUG:root:[master 2b7c3eb] hapyak
 Committer: root <root@ip-172-31-18-114.us-west-2.compute.internal>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 2 files changed, 29 insertions(+)

DEBUG:root:
DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 16:00:22.635574
DEBUG:root:i finished updated the demo pages2015-06-07 16:00:50.884586
DEBUG:root:heres the currentworkingderectory/home/ubuntu/forgescan.github.io

DEBUG:root:
DEBUG:root:[master 0d96b20] hapyak
 Committer: root <root@ip-172-31-18-114.us-west-2.compute.internal>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 22 insertions(+)

DEBUG:root:
DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 16:00:55.004815
DEBUG:root:i finished updated the demo pages2015-06-07 16:01:22.525355
DEBUG:root:heres the currentworkingderectory/home/ubuntu/forgescan.github.io

DEBUG:root:
DEBUG:root:[master 214b55d] hapyak
 Committer: root <root@ip-172-31-18-114.us-west-2.compute.internal>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 22 insertions(+)

DEBUG:root:
DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 16:01:26.677875
DEBUG:root:i finished updated the demo pages2015-06-07 16:01:53.775174
DEBUG:root:heres the currentworkingderectory/home/ubuntu/forgescan.github.io

DEBUG:root:
DEBUG:root:[master 384edc2] hapyak
 Committer: root <root@ip-172-31-18-114.us-west-2.compute.internal>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 22 insertions(+)

DEBUG:root:
DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 16:01:57.958706
DEBUG:root:i finished updated the demo pages2015-06-07 16:02:25.465822
DEBUG:root:heres the currentworkingderectory/home/ubuntu/forgescan.github.io

DEBUG:root:
DEBUG:root:[master 7b6b197] hapyak
 Committer: root <root@ip-172-31-18-114.us-west-2.compute.internal>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 22 insertions(+)

DEBUG:root:
DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 16:02:29.606826
DEBUG:root:i finished updated the demo pages2015-06-07 16:02:57.351187
DEBUG:root:heres the currentworkingderectory/home/ubuntu/forgescan.github.io

DEBUG:root:
DEBUG:root:[master ab469c5] hapyak
 Committer: root <root@ip-172-31-18-114.us-west-2.compute.internal>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 2 files changed, 25 insertions(+), 3 deletions(-)

DEBUG:root:
DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 16:03:01.534756
DEBUG:root:loggerdoer worked
DEBUG:root:fileiowas imported
DEBUG:root:heres the cwd/home/ubuntu/forgescan.github.io
DEBUG:root:HERE I SHOULD BE LOGGING SOMTHING
DEBUG:oauth2client.client:{'iss': u'205443885400-cdl80r1q3am00nv1tnont4i2urafla3j@developer.gserviceaccount.com', 'scope': 'https://spreadsheets.google.com/feeds', 'aud': 'https://accounts.google.com/o/oauth2/token', 'exp': 1433696587, 'iat': 1433692987}
DEBUG:oauth2client.crypt:[u'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9', u'eyJpc3MiOiIyMDU0NDM4ODU0MDAtY2RsODByMXEzYW0wMG52MXRub250NGkydXJhZmxhM2pAZGV2ZWxvcGVyLmdzZXJ2aWNlYWNjb3VudC5jb20iLCJzY29wZSI6Imh0dHBzOi8vc3ByZWFkc2hlZXRzLmdvb2dsZS5jb20vZmVlZHMiLCJhdWQiOiJodHRwczovL2FjY291bnRzLmdvb2dsZS5jb20vby9vYXV0aDIvdG9rZW4iLCJleHAiOjE0MzM2OTY1ODcsImlhdCI6MTQzMzY5Mjk4N30', u'GkmAvhlwMIKyE1dJuGxdaOORI2dntn3xkD6ctKMB1TzdS_I1yzPC2ROEYImbEw-iWzQsQ5tDxJHQ7DvJA2JqQ8SH1NKhw74f4STpxZ9dquWjD_KPSoiDA7Lomqk78F2c3DoNUgHllO9TmP9r5ze0yZiOj1fCyOPqh3KLH_vmrpg']
INFO:oauth2client.client:Refreshing access_token
DEBUG:root:i finished updated the demo pages2015-06-07 16:03:27.410671
DEBUG:root:heres the currentworkingderectory/home/ubuntu/forgescan.github.io

DEBUG:root:usage: git [--version] [--help] [-C <path>] [-c name=value]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p|--paginate|--no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

The most commonly used git commands are:
   add        Add file contents to the index
   bisect     Find by binary search the change that introduced a bug
   branch     List, create, or delete branches
   checkout   Checkout a branch or paths to the working tree
   clone      Clone a repository into a new directory
   commit     Record changes to the repository
   diff       Show changes between commits, commit and working tree, etc
   fetch      Download objects and refs from another repository
   grep       Print lines matching a pattern
   init       Create an empty Git repository or reinitialize an existing one
   log        Show commit logs
   merge      Join two or more development histories together
   mv         Move or rename a file, a directory, or a symlink
   pull       Fetch from and integrate with another repository or a local branch
   push       Update remote refs along with associated objects
   rebase     Forward-port local commits to the updated upstream head
   reset      Reset current HEAD to the specified state
   rm         Remove files from the working tree and from the index
   show       Show various types of objects
   status     Show the working tree status
   tag        Create, list, delete or verify a tag object signed with GPG

'git help -a' and 'git help -g' lists available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.

DEBUG:root:usage: git [--version] [--help] [-C <path>] [-c name=value]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p|--paginate|--no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

The most commonly used git commands are:
   add        Add file contents to the index
   bisect     Find by binary search the change that introduced a bug
   branch     List, create, or delete branches
   checkout   Checkout a branch or paths to the working tree
   clone      Clone a repository into a new directory
   commit     Record changes to the repository
   diff       Show changes between commits, commit and working tree, etc
   fetch      Download objects and refs from another repository
   grep       Print lines matching a pattern
   init       Create an empty Git repository or reinitialize an existing one
   log        Show commit logs
   merge      Join two or more development histories together
   mv         Move or rename a file, a directory, or a symlink
   pull       Fetch from and integrate with another repository or a local branch
   push       Update remote refs along with associated objects
   rebase     Forward-port local commits to the updated upstream head
   reset      Reset current HEAD to the specified state
   rm         Remove files from the working tree and from the index
   show       Show various types of objects
   status     Show the working tree status
   tag        Create, list, delete or verify a tag object signed with GPG

'git help -a' and 'git help -g' lists available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.

DEBUG:root:usage: git [--version] [--help] [-C <path>] [-c name=value]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p|--paginate|--no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

The most commonly used git commands are:
   add        Add file contents to the index
   bisect     Find by binary search the change that introduced a bug
   branch     List, create, or delete branches
   checkout   Checkout a branch or paths to the working tree
   clone      Clone a repository into a new directory
   commit     Record changes to the repository
   diff       Show changes between commits, commit and working tree, etc
   fetch      Download objects and refs from another repository
   grep       Print lines matching a pattern
   init       Create an empty Git repository or reinitialize an existing one
   log        Show commit logs
   merge      Join two or more development histories together
   mv         Move or rename a file, a directory, or a symlink
   pull       Fetch from and integrate with another repository or a local branch
   push       Update remote refs along with associated objects
   rebase     Forward-port local commits to the updated upstream head
   reset      Reset current HEAD to the specified state
   rm         Remove files from the working tree and from the index
   show       Show various types of objects
   status     Show the working tree status
   tag        Create, list, delete or verify a tag object signed with GPG

'git help -a' and 'git help -g' lists available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.

DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 16:03:27.571568
DEBUG:root:i finished updated the demo pages2015-06-07 16:03:56.448314
DEBUG:root:heres the currentworkingderectory/home/ubuntu/forgescan.github.io

DEBUG:root:usage: git [--version] [--help] [-C <path>] [-c name=value]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p|--paginate|--no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

The most commonly used git commands are:
   add        Add file contents to the index
   bisect     Find by binary search the change that introduced a bug
   branch     List, create, or delete branches
   checkout   Checkout a branch or paths to the working tree
   clone      Clone a repository into a new directory
   commit     Record changes to the repository
   diff       Show changes between commits, commit and working tree, etc
   fetch      Download objects and refs from another repository
   grep       Print lines matching a pattern
   init       Create an empty Git repository or reinitialize an existing one
   log        Show commit logs
   merge      Join two or more development histories together
   mv         Move or rename a file, a directory, or a symlink
   pull       Fetch from and integrate with another repository or a local branch
   push       Update remote refs along with associated objects
   rebase     Forward-port local commits to the updated upstream head
   reset      Reset current HEAD to the specified state
   rm         Remove files from the working tree and from the index
   show       Show various types of objects
   status     Show the working tree status
   tag        Create, list, delete or verify a tag object signed with GPG

'git help -a' and 'git help -g' lists available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.

DEBUG:root:usage: git [--version] [--help] [-C <path>] [-c name=value]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p|--paginate|--no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

The most commonly used git commands are:
   add        Add file contents to the index
   bisect     Find by binary search the change that introduced a bug
   branch     List, create, or delete branches
   checkout   Checkout a branch or paths to the working tree
   clone      Clone a repository into a new directory
   commit     Record changes to the repository
   diff       Show changes between commits, commit and working tree, etc
   fetch      Download objects and refs from another repository
   grep       Print lines matching a pattern
   init       Create an empty Git repository or reinitialize an existing one
   log        Show commit logs
   merge      Join two or more development histories together
   mv         Move or rename a file, a directory, or a symlink
   pull       Fetch from and integrate with another repository or a local branch
   push       Update remote refs along with associated objects
   rebase     Forward-port local commits to the updated upstream head
   reset      Reset current HEAD to the specified state
   rm         Remove files from the working tree and from the index
   show       Show various types of objects
   status     Show the working tree status
   tag        Create, list, delete or verify a tag object signed with GPG

'git help -a' and 'git help -g' lists available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.

DEBUG:root:usage: git [--version] [--help] [-C <path>] [-c name=value]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p|--paginate|--no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

The most commonly used git commands are:
   add        Add file contents to the index
   bisect     Find by binary search the change that introduced a bug
   branch     List, create, or delete branches
   checkout   Checkout a branch or paths to the working tree
   clone      Clone a repository into a new directory
   commit     Record changes to the repository
   diff       Show changes between commits, commit and working tree, etc
   fetch      Download objects and refs from another repository
   grep       Print lines matching a pattern
   init       Create an empty Git repository or reinitialize an existing one
   log        Show commit logs
   merge      Join two or more development histories together
   mv         Move or rename a file, a directory, or a symlink
   pull       Fetch from and integrate with another repository or a local branch
   push       Update remote refs along with associated objects
   rebase     Forward-port local commits to the updated upstream head
   reset      Reset current HEAD to the specified state
   rm         Remove files from the working tree and from the index
   show       Show various types of objects
   status     Show the working tree status
   tag        Create, list, delete or verify a tag object signed with GPG

'git help -a' and 'git help -g' lists available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.

DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 16:03:56.612418
DEBUG:root:i finished updated the demo pages2015-06-07 16:04:30.130636
DEBUG:root:heres the currentworkingderectory/home/ubuntu/forgescan.github.io

DEBUG:root:usage: git [--version] [--help] [-C <path>] [-c name=value]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p|--paginate|--no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

The most commonly used git commands are:
   add        Add file contents to the index
   bisect     Find by binary search the change that introduced a bug
   branch     List, create, or delete branches
   checkout   Checkout a branch or paths to the working tree
   clone      Clone a repository into a new directory
   commit     Record changes to the repository
   diff       Show changes between commits, commit and working tree, etc
   fetch      Download objects and refs from another repository
   grep       Print lines matching a pattern
   init       Create an empty Git repository or reinitialize an existing one
   log        Show commit logs
   merge      Join two or more development histories together
   mv         Move or rename a file, a directory, or a symlink
   pull       Fetch from and integrate with another repository or a local branch
   push       Update remote refs along with associated objects
   rebase     Forward-port local commits to the updated upstream head
   reset      Reset current HEAD to the specified state
   rm         Remove files from the working tree and from the index
   show       Show various types of objects
   status     Show the working tree status
   tag        Create, list, delete or verify a tag object signed with GPG

'git help -a' and 'git help -g' lists available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.

DEBUG:root:usage: git [--version] [--help] [-C <path>] [-c name=value]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p|--paginate|--no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

The most commonly used git commands are:
   add        Add file contents to the index
   bisect     Find by binary search the change that introduced a bug
   branch     List, create, or delete branches
   checkout   Checkout a branch or paths to the working tree
   clone      Clone a repository into a new directory
   commit     Record changes to the repository
   diff       Show changes between commits, commit and working tree, etc
   fetch      Download objects and refs from another repository
   grep       Print lines matching a pattern
   init       Create an empty Git repository or reinitialize an existing one
   log        Show commit logs
   merge      Join two or more development histories together
   mv         Move or rename a file, a directory, or a symlink
   pull       Fetch from and integrate with another repository or a local branch
   push       Update remote refs along with associated objects
   rebase     Forward-port local commits to the updated upstream head
   reset      Reset current HEAD to the specified state
   rm         Remove files from the working tree and from the index
   show       Show various types of objects
   status     Show the working tree status
   tag        Create, list, delete or verify a tag object signed with GPG

'git help -a' and 'git help -g' lists available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.

DEBUG:root:usage: git [--version] [--help] [-C <path>] [-c name=value]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p|--paginate|--no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

The most commonly used git commands are:
   add        Add file contents to the index
   bisect     Find by binary search the change that introduced a bug
   branch     List, create, or delete branches
   checkout   Checkout a branch or paths to the working tree
   clone      Clone a repository into a new directory
   commit     Record changes to the repository
   diff       Show changes between commits, commit and working tree, etc
   fetch      Download objects and refs from another repository
   grep       Print lines matching a pattern
   init       Create an empty Git repository or reinitialize an existing one
   log        Show commit logs
   merge      Join two or more development histories together
   mv         Move or rename a file, a directory, or a symlink
   pull       Fetch from and integrate with another repository or a local branch
   push       Update remote refs along with associated objects
   rebase     Forward-port local commits to the updated upstream head
   reset      Reset current HEAD to the specified state
   rm         Remove files from the working tree and from the index
   show       Show various types of objects
   status     Show the working tree status
   tag        Create, list, delete or verify a tag object signed with GPG

'git help -a' and 'git help -g' lists available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.

DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 16:04:30.373301
DEBUG:root:loggerdoer worked
DEBUG:root:fileiowas imported
DEBUG:root:heres the cwd/home/ubuntu/forgescan.github.io
DEBUG:root:HERE I SHOULD BE LOGGING SOMTHING
DEBUG:oauth2client.client:{'iss': u'205443885400-cdl80r1q3am00nv1tnont4i2urafla3j@developer.gserviceaccount.com', 'scope': 'https://spreadsheets.google.com/feeds', 'aud': 'https://accounts.google.com/o/oauth2/token', 'exp': 1433696691, 'iat': 1433693091}
DEBUG:oauth2client.crypt:[u'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9', u'eyJpc3MiOiIyMDU0NDM4ODU0MDAtY2RsODByMXEzYW0wMG52MXRub250NGkydXJhZmxhM2pAZGV2ZWxvcGVyLmdzZXJ2aWNlYWNjb3VudC5jb20iLCJzY29wZSI6Imh0dHBzOi8vc3ByZWFkc2hlZXRzLmdvb2dsZS5jb20vZmVlZHMiLCJhdWQiOiJodHRwczovL2FjY291bnRzLmdvb2dsZS5jb20vby9vYXV0aDIvdG9rZW4iLCJleHAiOjE0MzM2OTY2OTEsImlhdCI6MTQzMzY5MzA5MX0', u'LWnxxwq4pnUeI8FuFEVsE3dyBGXWaiEpingwtb33aMssglEXRWamYYvUlARiXRTa15IWH7VZgHm6E4JgRlPbIc0d8cxnCULVILwrE3X_7xX2Sq5RhGs9sat98WNh9CbSAVM1cXv2by1_SW8n6Kso5hUO-KLFpBNgjkq6iuMQPq4']
INFO:oauth2client.client:Refreshing access_token
DEBUG:root:i finished updated the demo pages2015-06-07 16:05:15.046694
DEBUG:root:heres the currentworkingderectory/home/ubuntu/forgescan.github.io

DEBUG:root:
DEBUG:root:[master afb2421] hapyak
 Committer: root <root@ip-172-31-18-114.us-west-2.compute.internal>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 3 files changed, 351 insertions(+), 3 deletions(-)

DEBUG:root:
DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 16:05:20.103394
DEBUG:root:i finished updated the demo pages2015-06-07 16:05:53.826078
DEBUG:root:heres the currentworkingderectory/home/ubuntu/forgescan.github.io

DEBUG:root:
DEBUG:root:[master ea042ed] hapyak
 Committer: root <root@ip-172-31-18-114.us-west-2.compute.internal>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 22 insertions(+)

DEBUG:root:
DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 16:05:58.719735
DEBUG:root:i finished updated the demo pages2015-06-07 16:06:32.480331
DEBUG:root:heres the currentworkingderectory/home/ubuntu/forgescan.github.io

DEBUG:root:
DEBUG:root:[master 1859a4b] hapyak
 Committer: root <root@ip-172-31-18-114.us-west-2.compute.internal>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 22 insertions(+)

DEBUG:root:
DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 16:06:37.588369
DEBUG:root:i finished updated the demo pages2015-06-07 16:07:10.714208
DEBUG:root:heres the currentworkingderectory/home/ubuntu/forgescan.github.io

DEBUG:root:
DEBUG:root:[master f0a2842] hapyak
 Committer: root <root@ip-172-31-18-114.us-west-2.compute.internal>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 22 insertions(+)

DEBUG:root:
DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 16:07:15.897071
DEBUG:root:i finished updated the demo pages2015-06-07 16:07:48.776124
DEBUG:root:heres the currentworkingderectory/home/ubuntu/forgescan.github.io

DEBUG:root:
DEBUG:root:[master 35cdf68] hapyak
 Committer: root <root@ip-172-31-18-114.us-west-2.compute.internal>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 22 insertions(+)

DEBUG:root:
DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 16:07:53.602363
DEBUG:root:i finished updated the demo pages2015-06-07 16:08:27.763330
DEBUG:root:heres the currentworkingderectory/home/ubuntu/forgescan.github.io

DEBUG:root:
DEBUG:root:[master f58376d] hapyak
 Committer: root <root@ip-172-31-18-114.us-west-2.compute.internal>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 22 insertions(+)

DEBUG:root:
DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 16:08:32.777010
DEBUG:root:i finished updated the demo pages2015-06-07 16:09:08.826910
DEBUG:root:heres the currentworkingderectory/home/ubuntu/forgescan.github.io

DEBUG:root:
DEBUG:root:[master 17d8bd4] hapyak
 Committer: root <root@ip-172-31-18-114.us-west-2.compute.internal>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 22 insertions(+)

DEBUG:root:
DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 16:09:13.971621
DEBUG:root:i finished updated the demo pages2015-06-07 16:09:46.909426
DEBUG:root:heres the currentworkingderectory/home/ubuntu/forgescan.github.io

DEBUG:root:
DEBUG:root:[master b6757e2] hapyak
 Committer: root <root@ip-172-31-18-114.us-west-2.compute.internal>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 22 insertions(+)

DEBUG:root:
DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 16:09:52.015554
DEBUG:root:i finished updated the demo pages2015-06-07 16:10:25.392024
DEBUG:root:heres the currentworkingderectory/home/ubuntu/forgescan.github.io

DEBUG:root:
DEBUG:root:[master 7767c05] hapyak
 Committer: root <root@ip-172-31-18-114.us-west-2.compute.internal>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 22 insertions(+)

DEBUG:root:
DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 16:10:30.533078
DEBUG:root:i finished updated the demo pages2015-06-07 16:11:04.057850
DEBUG:root:heres the currentworkingderectory/home/ubuntu/forgescan.github.io

DEBUG:root:
DEBUG:root:[master 1815779] hapyak
 Committer: root <root@ip-172-31-18-114.us-west-2.compute.internal>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 22 insertions(+)

DEBUG:root:
DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 16:11:09.151107
DEBUG:root:i finished updated the demo pages2015-06-07 16:11:43.793053
DEBUG:root:heres the currentworkingderectory/home/ubuntu/forgescan.github.io

DEBUG:root:
DEBUG:root:[master c152c14] hapyak
 Committer: root <root@ip-172-31-18-114.us-west-2.compute.internal>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 22 insertions(+)

DEBUG:root:
DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 16:11:48.892188
DEBUG:root:i finished updated the demo pages2015-06-07 16:12:22.131432
DEBUG:root:heres the currentworkingderectory/home/ubuntu/forgescan.github.io

DEBUG:root:
DEBUG:root:[master 137ab02] hapyak
 Committer: root <root@ip-172-31-18-114.us-west-2.compute.internal>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 22 insertions(+)

DEBUG:root:
DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 16:12:27.071978
DEBUG:root:i finished updated the demo pages2015-06-07 16:13:06.822937
DEBUG:root:heres the currentworkingderectory/home/ubuntu/forgescan.github.io

DEBUG:root:
DEBUG:root:[master fa4f37b] hapyak
 Committer: root <root@ip-172-31-18-114.us-west-2.compute.internal>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 22 insertions(+)

DEBUG:root:
DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 16:13:11.802135
DEBUG:root:i finished updated the demo pages2015-06-07 16:13:44.860193
DEBUG:root:heres the currentworkingderectory/home/ubuntu/forgescan.github.io

DEBUG:root:
DEBUG:root:[master cdfe539] hapyak
 Committer: root <root@ip-172-31-18-114.us-west-2.compute.internal>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 22 insertions(+)

DEBUG:root:
DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 16:13:49.877461
DEBUG:root:i finished updated the demo pages2015-06-07 16:14:23.727073
DEBUG:root:heres the currentworkingderectory/home/ubuntu/forgescan.github.io

DEBUG:root:
DEBUG:root:[master 526180a] hapyak
 Committer: root <root@ip-172-31-18-114.us-west-2.compute.internal>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 22 insertions(+)

DEBUG:root:
DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 16:14:28.631338
DEBUG:root:i finished updated the demo pages2015-06-07 16:15:01.569909
DEBUG:root:heres the currentworkingderectory/home/ubuntu/forgescan.github.io

DEBUG:root:
DEBUG:root:[master 68e42eb] hapyak
 Committer: root <root@ip-172-31-18-114.us-west-2.compute.internal>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 22 insertions(+)

DEBUG:root:
DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 16:15:06.669061
DEBUG:root:i finished updated the demo pages2015-06-07 16:15:40.515870
DEBUG:root:heres the currentworkingderectory/home/ubuntu/forgescan.github.io

DEBUG:root:
DEBUG:root:[master 5627d2f] hapyak
 Committer: root <root@ip-172-31-18-114.us-west-2.compute.internal>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 22 insertions(+)

DEBUG:root:
DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 16:15:45.582030
DEBUG:root:i finished updated the demo pages2015-06-07 16:16:19.441600
DEBUG:root:heres the currentworkingderectory/home/ubuntu/forgescan.github.io

DEBUG:root:
DEBUG:root:[master 7632043] hapyak
 Committer: root <root@ip-172-31-18-114.us-west-2.compute.internal>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 22 insertions(+)

DEBUG:root:
DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 16:16:24.467649
DEBUG:root:i finished updated the demo pages2015-06-07 16:16:57.511110
DEBUG:root:heres the currentworkingderectory/home/ubuntu/forgescan.github.io

DEBUG:root:
DEBUG:root:[master 156ef75] hapyak
 Committer: root <root@ip-172-31-18-114.us-west-2.compute.internal>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 22 insertions(+)

DEBUG:root:
DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 16:17:02.810327
DEBUG:root:i finished updated the demo pages2015-06-07 16:17:36.148635
DEBUG:root:heres the currentworkingderectory/home/ubuntu/forgescan.github.io

DEBUG:root:
DEBUG:root:[master 243105b] hapyak
 Committer: root <root@ip-172-31-18-114.us-west-2.compute.internal>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 22 insertions(+)

DEBUG:root:
DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 16:17:41.174272
DEBUG:root:i finished updated the demo pages2015-06-07 16:18:16.193562
DEBUG:root:heres the currentworkingderectory/home/ubuntu/forgescan.github.io

DEBUG:root:
DEBUG:root:[master 1e9f2f6] hapyak
 Committer: root <root@ip-172-31-18-114.us-west-2.compute.internal>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 22 insertions(+)

DEBUG:root:
DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 16:18:21.265606
DEBUG:root:i finished updated the demo pages2015-06-07 16:18:53.852851
DEBUG:root:heres the currentworkingderectory/home/ubuntu/forgescan.github.io

DEBUG:root:
DEBUG:root:[master 869908e] hapyak
 Committer: root <root@ip-172-31-18-114.us-west-2.compute.internal>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 22 insertions(+)

DEBUG:root:
DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 16:18:58.121735
DEBUG:root:i finished updated the demo pages2015-06-07 16:19:25.839853
DEBUG:root:heres the currentworkingderectory/home/ubuntu/forgescan.github.io

DEBUG:root:
DEBUG:root:[master 5cacaa0] hapyak
 Committer: root <root@ip-172-31-18-114.us-west-2.compute.internal>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 22 insertions(+)

DEBUG:root:
DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 16:19:30.051328
DEBUG:root:i finished updated the demo pages2015-06-07 16:19:57.695468
DEBUG:root:heres the currentworkingderectory/home/ubuntu/forgescan.github.io

DEBUG:root:
DEBUG:root:[master c0d79b6] hapyak
 Committer: root <root@ip-172-31-18-114.us-west-2.compute.internal>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 22 insertions(+)

DEBUG:root:
DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 16:20:03.132367
DEBUG:root:i finished updated the demo pages2015-06-07 16:20:30.735207
DEBUG:root:heres the currentworkingderectory/home/ubuntu/forgescan.github.io

DEBUG:root:
DEBUG:root:[master 79a23be] hapyak
 Committer: root <root@ip-172-31-18-114.us-west-2.compute.internal>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 22 insertions(+)

DEBUG:root:
DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 16:20:34.877433
DEBUG:root:loggerdoer worked
DEBUG:root:fileiowas imported
DEBUG:root:heres the cwd/home/ubuntu/forgescan.github.io
DEBUG:root:HERE I SHOULD BE LOGGING SOMTHING
DEBUG:oauth2client.client:{'iss': u'205443885400-cdl80r1q3am00nv1tnont4i2urafla3j@developer.gserviceaccount.com', 'scope': 'https://spreadsheets.google.com/feeds', 'aud': 'https://accounts.google.com/o/oauth2/token', 'exp': 1433697665, 'iat': 1433694065}
DEBUG:oauth2client.crypt:[u'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9', u'eyJpc3MiOiIyMDU0NDM4ODU0MDAtY2RsODByMXEzYW0wMG52MXRub250NGkydXJhZmxhM2pAZGV2ZWxvcGVyLmdzZXJ2aWNlYWNjb3VudC5jb20iLCJzY29wZSI6Imh0dHBzOi8vc3ByZWFkc2hlZXRzLmdvb2dsZS5jb20vZmVlZHMiLCJhdWQiOiJodHRwczovL2FjY291bnRzLmdvb2dsZS5jb20vby9vYXV0aDIvdG9rZW4iLCJleHAiOjE0MzM2OTc2NjUsImlhdCI6MTQzMzY5NDA2NX0', u'XkxxZh47fxAn2_-RcJ2FrCekP3XitjHm6A8xzXB_A-jrr4FzPilMGT6jVIvWd-ij3y7O05pmK5eZvVlRlxDhYOwcLsZeML7BhUmBdZVA9xmVVpHVi9kFL_b7H9GEhNwt2hQKCcMwZwcrCBJszy9G3GXwhW6a81D99M8dwLCrjpI']
INFO:oauth2client.client:Refreshing access_token
DEBUG:root:i finished updated the demo pages2015-06-07 16:21:26.388793
DEBUG:root:heres the currentworkingderectory/home/ubuntu/forgescan.github.io

DEBUG:root:
DEBUG:root:git failTraceback (most recent call last):
  File "/home/ubuntu/forgescan.github.io/HAPYAKFUNCTIONS.py", line 202, in gitupdate
    print outg
NameError: global name 'outg' is not defined

DEBUG:root:i finished updated the git2015-06-07 16:21:29.002789
DEBUG:root:i finished updated the demo pages2015-06-07 16:21:56.344511
DEBUG:root:heres the currentworkingderectory/home/ubuntu/forgescan.github.io

DEBUG:root:
DEBUG:root:git failTraceback (most recent call last):
  File "/home/ubuntu/forgescan.github.io/HAPYAKFUNCTIONS.py", line 202, in gitupdate
    print outg
NameError: global name 'outg' is not defined

DEBUG:root:i finished updated the git2015-06-07 16:21:59.054783
DEBUG:root:i finished updated the demo pages2015-06-07 16:22:27.343358
DEBUG:root:heres the currentworkingderectory/home/ubuntu/forgescan.github.io

DEBUG:root:
DEBUG:root:git failTraceback (most recent call last):
  File "/home/ubuntu/forgescan.github.io/HAPYAKFUNCTIONS.py", line 202, in gitupdate
    print outg
NameError: global name 'outg' is not defined

DEBUG:root:i finished updated the git2015-06-07 16:22:29.897335
DEBUG:root:i finished updated the demo pages2015-06-07 16:22:57.663924
DEBUG:root:heres the currentworkingderectory/home/ubuntu/forgescan.github.io

DEBUG:root:
DEBUG:root:git failTraceback (most recent call last):
  File "/home/ubuntu/forgescan.github.io/HAPYAKFUNCTIONS.py", line 202, in gitupdate
    print outg
NameError: global name 'outg' is not defined

DEBUG:root:i finished updated the git2015-06-07 16:23:00.492422
DEBUG:root:loggerdoer worked
DEBUG:root:fileiowas imported
DEBUG:root:heres the cwd/home/ubuntu/forgescan.github.io
DEBUG:root:HERE I SHOULD BE LOGGING SOMTHING
DEBUG:oauth2client.client:{'iss': u'205443885400-cdl80r1q3am00nv1tnont4i2urafla3j@developer.gserviceaccount.com', 'scope': 'https://spreadsheets.google.com/feeds', 'aud': 'https://accounts.google.com/o/oauth2/token', 'exp': 1433697803, 'iat': 1433694203}
DEBUG:oauth2client.crypt:[u'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9', u'eyJpc3MiOiIyMDU0NDM4ODU0MDAtY2RsODByMXEzYW0wMG52MXRub250NGkydXJhZmxhM2pAZGV2ZWxvcGVyLmdzZXJ2aWNlYWNjb3VudC5jb20iLCJzY29wZSI6Imh0dHBzOi8vc3ByZWFkc2hlZXRzLmdvb2dsZS5jb20vZmVlZHMiLCJhdWQiOiJodHRwczovL2FjY291bnRzLmdvb2dsZS5jb20vby9vYXV0aDIvdG9rZW4iLCJleHAiOjE0MzM2OTc4MDMsImlhdCI6MTQzMzY5NDIwM30', u'D1X7x4CxVSGt3sb9BY9mhd4yQCvWtQJRENhASx345g3OlCeXDmYtxcNVgxGvea6drkeKCmHlBKQu054DPMR0DNCBOuvHs_U4NDVwsjC91ZTi6IeDsjEQ_3ScGU4VDRy-aFL9nWQFTTP4p4iyhYiqRkwq-w1X2QvvJzttWe7ENos']
INFO:oauth2client.client:Refreshing access_token
DEBUG:root:i finished updated the demo pages2015-06-07 16:23:42.896318
DEBUG:root:heres the currentworkingderectory/home/ubuntu/forgescan.github.io

DEBUG:root:
DEBUG:root:[master 62e9adb] hapyak
 Committer: root <root@ip-172-31-18-114.us-west-2.compute.internal>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 3 files changed, 18 insertions(+), 1 deletion(-)

DEBUG:root:
DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 16:23:46.998354
DEBUG:root:i finished updated the demo pages2015-06-07 16:24:18.979225
DEBUG:root:heres the currentworkingderectory/home/ubuntu/forgescan.github.io

DEBUG:root:
DEBUG:root:[master ee7def9] hapyak
 Committer: root <root@ip-172-31-18-114.us-west-2.compute.internal>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 22 insertions(+)

DEBUG:root:
DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 16:24:23.958152
DEBUG:root:i finished updated the demo pages2015-06-07 16:24:57.515385
DEBUG:root:heres the currentworkingderectory/home/ubuntu/forgescan.github.io

DEBUG:root:
DEBUG:root:[master 88b0d0c] hapyak
 Committer: root <root@ip-172-31-18-114.us-west-2.compute.internal>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 22 insertions(+)

DEBUG:root:
DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 16:25:02.598952
DEBUG:root:i finished updated the demo pages2015-06-07 16:25:36.416781
DEBUG:root:heres the currentworkingderectory/home/ubuntu/forgescan.github.io

DEBUG:root:
DEBUG:root:[master e323cad] hapyak
 Committer: root <root@ip-172-31-18-114.us-west-2.compute.internal>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 22 insertions(+)

DEBUG:root:
DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 16:25:41.597239
DEBUG:root:i finished updated the demo pages2015-06-07 16:26:15.053813
DEBUG:root:heres the currentworkingderectory/home/ubuntu/forgescan.github.io

DEBUG:root:
DEBUG:root:[master 657e9b7] hapyak
 Committer: root <root@ip-172-31-18-114.us-west-2.compute.internal>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 2 files changed, 26 insertions(+)

DEBUG:root:loggerdoer worked
DEBUG:root:fileiowas imported
DEBUG:root:heres the cwd/home/ubuntu/forgescan.github.io
DEBUG:root:HERE I SHOULD BE LOGGING SOMTHING
DEBUG:oauth2client.client:{'iss': u'205443885400-cdl80r1q3am00nv1tnont4i2urafla3j@developer.gserviceaccount.com', 'scope': 'https://spreadsheets.google.com/feeds', 'aud': 'https://accounts.google.com/o/oauth2/token', 'exp': 1433697984, 'iat': 1433694384}
DEBUG:oauth2client.crypt:[u'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9', u'eyJpc3MiOiIyMDU0NDM4ODU0MDAtY2RsODByMXEzYW0wMG52MXRub250NGkydXJhZmxhM2pAZGV2ZWxvcGVyLmdzZXJ2aWNlYWNjb3VudC5jb20iLCJzY29wZSI6Imh0dHBzOi8vc3ByZWFkc2hlZXRzLmdvb2dsZS5jb20vZmVlZHMiLCJhdWQiOiJodHRwczovL2FjY291bnRzLmdvb2dsZS5jb20vby9vYXV0aDIvdG9rZW4iLCJleHAiOjE0MzM2OTc5ODQsImlhdCI6MTQzMzY5NDM4NH0', u'nIyqR2APihKjT-epmz97ygww_bH8Lv1PNLTpGP7uP_bD2cPMkPKO9mMKEJbMe38vqEn2VEm0Uum44ccCQ78eliAFrDsdbsoa51q2xB19wRzteNvuBhKVnwTCrHURMVZx6YVThJF4dtyIWcwInvX3uqCA-1t2qkf5nP-VXceBh_0']
INFO:oauth2client.client:Refreshing access_token
DEBUG:root:i finished updated the demo pages2015-06-07 16:26:47.976221
DEBUG:root:heres the currentworkingderectory/home/ubuntu/forgescan.github.io

DEBUG:root:
DEBUG:root:[master 88d5e04] hapyak
 Committer: root <root@ip-172-31-18-114.us-west-2.compute.internal>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 2 files changed, 26 insertions(+)

DEBUG:root:
DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 16:26:56.595280
DEBUG:root:i finished updated the demo pages2015-06-07 16:27:30.581030
DEBUG:root:heres the currentworkingderectory/home/ubuntu/forgescan.github.io

DEBUG:root:
DEBUG:root:[master 0498949] hapyak
 Committer: root <root@ip-172-31-18-114.us-west-2.compute.internal>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 22 insertions(+)

DEBUG:root:
DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 16:27:39.080367
DEBUG:root:i finished updated the demo pages2015-06-07 16:28:12.474233
DEBUG:root:heres the currentworkingderectory/home/ubuntu/forgescan.github.io

DEBUG:root:
DEBUG:root:[master 1174005] hapyak
 Committer: root <root@ip-172-31-18-114.us-west-2.compute.internal>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 22 insertions(+)

DEBUG:root:
DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 16:28:21.233665
DEBUG:root:loggerdoer worked
DEBUG:root:fileiowas imported
DEBUG:root:heres the cwd/home/ubuntu/forgescan.github.io
DEBUG:root:HERE I SHOULD BE LOGGING SOMTHING
DEBUG:oauth2client.client:{'iss': u'205443885400-cdl80r1q3am00nv1tnont4i2urafla3j@developer.gserviceaccount.com', 'scope': 'https://spreadsheets.google.com/feeds', 'aud': 'https://accounts.google.com/o/oauth2/token', 'exp': 1433698107, 'iat': 1433694507}
DEBUG:oauth2client.crypt:[u'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9', u'eyJpc3MiOiIyMDU0NDM4ODU0MDAtY2RsODByMXEzYW0wMG52MXRub250NGkydXJhZmxhM2pAZGV2ZWxvcGVyLmdzZXJ2aWNlYWNjb3VudC5jb20iLCJzY29wZSI6Imh0dHBzOi8vc3ByZWFkc2hlZXRzLmdvb2dsZS5jb20vZmVlZHMiLCJhdWQiOiJodHRwczovL2FjY291bnRzLmdvb2dsZS5jb20vby9vYXV0aDIvdG9rZW4iLCJleHAiOjE0MzM2OTgxMDcsImlhdCI6MTQzMzY5NDUwN30', u'XUmRVhjUD7WubsJIiMcehvGd9mfpM592PZKC01Mo70J7oV1o2hCMx1sJwRW09lfbicpStFbxe4Nd6dcrdUkI4t34RLO-hQFzZ84WdytXm5AaqkVcXSv7QYdsVQXI9oAv18qQ_h5JOr7_OSjWFkQCP_A8vqgJoAgPA81mrOyiIBM']
INFO:oauth2client.client:Refreshing access_token
DEBUG:root:i finished updated the demo pages2015-06-07 16:28:50.902760
DEBUG:root:heres the currentworkingderectory/home/ubuntu/forgescan.github.io

DEBUG:root:
DEBUG:root:git failTraceback (most recent call last):
  File "/home/ubuntu/forgescan.github.io/HAPYAKFUNCTIONS.py", line 205, in gitupdate
    logging.debug(str(out,err))
TypeError: str() takes at most 1 argument (2 given)

DEBUG:root:i finished updated the git2015-06-07 16:28:54.163626
DEBUG:root:i finished updated the demo pages2015-06-07 16:29:26.530772
DEBUG:root:heres the currentworkingderectory/home/ubuntu/forgescan.github.io

DEBUG:root:
DEBUG:root:git failTraceback (most recent call last):
  File "/home/ubuntu/forgescan.github.io/HAPYAKFUNCTIONS.py", line 205, in gitupdate
    logging.debug(str(out,err))
TypeError: str() takes at most 1 argument (2 given)

DEBUG:root:i finished updated the git2015-06-07 16:29:29.916077
DEBUG:root:i finished updated the demo pages2015-06-07 16:30:02.753817
DEBUG:root:heres the currentworkingderectory/home/ubuntu/forgescan.github.io

DEBUG:root:
DEBUG:root:git failTraceback (most recent call last):
  File "/home/ubuntu/forgescan.github.io/HAPYAKFUNCTIONS.py", line 205, in gitupdate
    logging.debug(str(out,err))
TypeError: str() takes at most 1 argument (2 given)

DEBUG:root:i finished updated the git2015-06-07 16:30:06.101643
DEBUG:root:loggerdoer worked
DEBUG:root:fileiowas imported
DEBUG:root:heres the cwd/home/ubuntu/forgescan.github.io
DEBUG:root:HERE I SHOULD BE LOGGING SOMTHING
DEBUG:oauth2client.client:{'iss': u'205443885400-cdl80r1q3am00nv1tnont4i2urafla3j@developer.gserviceaccount.com', 'scope': 'https://spreadsheets.google.com/feeds', 'aud': 'https://accounts.google.com/o/oauth2/token', 'exp': 1433698232, 'iat': 1433694632}
DEBUG:oauth2client.crypt:[u'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9', u'eyJpc3MiOiIyMDU0NDM4ODU0MDAtY2RsODByMXEzYW0wMG52MXRub250NGkydXJhZmxhM2pAZGV2ZWxvcGVyLmdzZXJ2aWNlYWNjb3VudC5jb20iLCJzY29wZSI6Imh0dHBzOi8vc3ByZWFkc2hlZXRzLmdvb2dsZS5jb20vZmVlZHMiLCJhdWQiOiJodHRwczovL2FjY291bnRzLmdvb2dsZS5jb20vby9vYXV0aDIvdG9rZW4iLCJleHAiOjE0MzM2OTgyMzIsImlhdCI6MTQzMzY5NDYzMn0', u'W_VMwUZMlp--7K4vppjYTNGWBYxAvwkEa7aOpvHo5rXkOBLjHVdiMEnE6DoR9kaPGL35K_mt_COa9q3Aa6Al0G9T96j8xyBpsS6dItAWCsApXL5z1V-LAPOjNjYJuJhpul7sS7GSevjq3x-Z-_f3pdPXulu6k5ZsuNbEw6FGX3o']
INFO:oauth2client.client:Refreshing access_token
DEBUG:root:i finished updated the demo pages2015-06-07 16:30:55.867871
DEBUG:root:heres the currentworkingderectory/home/ubuntu/forgescan.github.io

DEBUG:root:
DEBUG:root:[master b8098f6] hapyak
 Committer: root <root@ip-172-31-18-114.us-west-2.compute.internal>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 3 files changed, 21 insertions(+), 2 deletions(-)

DEBUG:root:
DEBUG:root:
DEBUG:root:warning: push.default is unset; its implicit value is changing in
Git 2.0 from 'matching' to 'simple'. To squelch this message
and maintain the current behavior after the default changes, use:

  git config --global push.default matching

To squelch this message and adopt the new behavior now, use:

  git config --global push.default simple

When push.default is set to 'matching', git will push local branches
to the remote branches that already exist with the same name.

In Git 2.0, Git will default to the more conservative 'simple'
behavior, which only pushes the current branch to the corresponding
remote branch that 'git pull' uses to update the current branch.

See 'git help config' and search for 'push.default' for further information.
(the 'simple' mode was introduced in Git 1.7.11. Use the similar mode
'current' instead of 'simple' if you sometimes use older versions of Git)

fatal: could not read Username for 'https://github.com': No such device or address

DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 16:31:04.870233
DEBUG:root:i finished updated the demo pages2015-06-07 16:31:38.372837
DEBUG:root:heres the currentworkingderectory/home/ubuntu/forgescan.github.io

DEBUG:root:
DEBUG:root:[master eab8e1a] hapyak
 Committer: root <root@ip-172-31-18-114.us-west-2.compute.internal>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 46 insertions(+)

DEBUG:root:
DEBUG:root:
DEBUG:root:warning: push.default is unset; its implicit value is changing in
Git 2.0 from 'matching' to 'simple'. To squelch this message
and maintain the current behavior after the default changes, use:

  git config --global push.default matching

To squelch this message and adopt the new behavior now, use:

  git config --global push.default simple

When push.default is set to 'matching', git will push local branches
to the remote branches that already exist with the same name.

In Git 2.0, Git will default to the more conservative 'simple'
behavior, which only pushes the current branch to the corresponding
remote branch that 'git pull' uses to update the current branch.

See 'git help config' and search for 'push.default' for further information.
(the 'simple' mode was introduced in Git 1.7.11. Use the similar mode
'current' instead of 'simple' if you sometimes use older versions of Git)

fatal: could not read Username for 'https://github.com': No such device or address

DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 16:31:47.058320
DEBUG:root:i finished updated the demo pages2015-06-07 16:32:19.886548
DEBUG:root:heres the currentworkingderectory/home/ubuntu/forgescan.github.io

DEBUG:root:
DEBUG:root:[master 5d501d2] hapyak
 Committer: root <root@ip-172-31-18-114.us-west-2.compute.internal>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 46 insertions(+)

DEBUG:root:
DEBUG:root:
DEBUG:root:warning: push.default is unset; its implicit value is changing in
Git 2.0 from 'matching' to 'simple'. To squelch this message
and maintain the current behavior after the default changes, use:

  git config --global push.default matching

To squelch this message and adopt the new behavior now, use:

  git config --global push.default simple

When push.default is set to 'matching', git will push local branches
to the remote branches that already exist with the same name.

In Git 2.0, Git will default to the more conservative 'simple'
behavior, which only pushes the current branch to the corresponding
remote branch that 'git pull' uses to update the current branch.

See 'git help config' and search for 'push.default' for further information.
(the 'simple' mode was introduced in Git 1.7.11. Use the similar mode
'current' instead of 'simple' if you sometimes use older versions of Git)

fatal: could not read Username for 'https://github.com': No such device or address

DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 16:32:28.417686
DEBUG:root:i finished updated the demo pages2015-06-07 16:33:01.175943
DEBUG:root:heres the currentworkingderectory/home/ubuntu/forgescan.github.io

DEBUG:root:
DEBUG:root:[master 661ed3a] hapyak
 Committer: root <root@ip-172-31-18-114.us-west-2.compute.internal>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 46 insertions(+)

DEBUG:root:
DEBUG:root:
DEBUG:root:warning: push.default is unset; its implicit value is changing in
Git 2.0 from 'matching' to 'simple'. To squelch this message
and maintain the current behavior after the default changes, use:

  git config --global push.default matching

To squelch this message and adopt the new behavior now, use:

  git config --global push.default simple

When push.default is set to 'matching', git will push local branches
to the remote branches that already exist with the same name.

In Git 2.0, Git will default to the more conservative 'simple'
behavior, which only pushes the current branch to the corresponding
remote branch that 'git pull' uses to update the current branch.

See 'git help config' and search for 'push.default' for further information.
(the 'simple' mode was introduced in Git 1.7.11. Use the similar mode
'current' instead of 'simple' if you sometimes use older versions of Git)

fatal: could not read Username for 'https://github.com': No such device or address

DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 16:33:10.189249
DEBUG:root:i finished updated the demo pages2015-06-07 16:33:43.209007
DEBUG:root:heres the currentworkingderectory/home/ubuntu/forgescan.github.io

DEBUG:root:
DEBUG:root:[master 4ae045b] hapyak
 Committer: root <root@ip-172-31-18-114.us-west-2.compute.internal>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 46 insertions(+)

DEBUG:root:
DEBUG:root:
DEBUG:root:warning: push.default is unset; its implicit value is changing in
Git 2.0 from 'matching' to 'simple'. To squelch this message
and maintain the current behavior after the default changes, use:

  git config --global push.default matching

To squelch this message and adopt the new behavior now, use:

  git config --global push.default simple

When push.default is set to 'matching', git will push local branches
to the remote branches that already exist with the same name.

In Git 2.0, Git will default to the more conservative 'simple'
behavior, which only pushes the current branch to the corresponding
remote branch that 'git pull' uses to update the current branch.

See 'git help config' and search for 'push.default' for further information.
(the 'simple' mode was introduced in Git 1.7.11. Use the similar mode
'current' instead of 'simple' if you sometimes use older versions of Git)

fatal: could not read Username for 'https://github.com': No such device or address

DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 16:33:52.302133
DEBUG:root:i finished updated the demo pages2015-06-07 16:34:19.424228
DEBUG:root:heres the currentworkingderectory/home/ubuntu/forgescan.github.io

DEBUG:root:
DEBUG:root:[master 76f06b8] hapyak
 Committer: root <root@ip-172-31-18-114.us-west-2.compute.internal>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 46 insertions(+)

DEBUG:root:
DEBUG:root:
DEBUG:root:warning: push.default is unset; its implicit value is changing in
Git 2.0 from 'matching' to 'simple'. To squelch this message
and maintain the current behavior after the default changes, use:

  git config --global push.default matching

To squelch this message and adopt the new behavior now, use:

  git config --global push.default simple

When push.default is set to 'matching', git will push local branches
to the remote branches that already exist with the same name.

In Git 2.0, Git will default to the more conservative 'simple'
behavior, which only pushes the current branch to the corresponding
remote branch that 'git pull' uses to update the current branch.

See 'git help config' and search for 'push.default' for further information.
(the 'simple' mode was introduced in Git 1.7.11. Use the similar mode
'current' instead of 'simple' if you sometimes use older versions of Git)

fatal: could not read Username for 'https://github.com': No such device or address

DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 16:34:26.993436
DEBUG:root:i finished updated the demo pages2015-06-07 16:34:54.733657
DEBUG:root:heres the currentworkingderectory/home/ubuntu/forgescan.github.io

DEBUG:root:
DEBUG:root:[master 7902975] hapyak
 Committer: root <root@ip-172-31-18-114.us-west-2.compute.internal>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 46 insertions(+)

DEBUG:root:
DEBUG:root:
DEBUG:root:warning: push.default is unset; its implicit value is changing in
Git 2.0 from 'matching' to 'simple'. To squelch this message
and maintain the current behavior after the default changes, use:

  git config --global push.default matching

To squelch this message and adopt the new behavior now, use:

  git config --global push.default simple

When push.default is set to 'matching', git will push local branches
to the remote branches that already exist with the same name.

In Git 2.0, Git will default to the more conservative 'simple'
behavior, which only pushes the current branch to the corresponding
remote branch that 'git pull' uses to update the current branch.

See 'git help config' and search for 'push.default' for further information.
(the 'simple' mode was introduced in Git 1.7.11. Use the similar mode
'current' instead of 'simple' if you sometimes use older versions of Git)

fatal: could not read Username for 'https://github.com': No such device or address

DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 16:35:02.351537
DEBUG:root:i finished updated the demo pages2015-06-07 16:35:30.847497
DEBUG:root:heres the currentworkingderectory/home/ubuntu/forgescan.github.io

DEBUG:root:
DEBUG:root:[master ef4fce0] hapyak
 Committer: root <root@ip-172-31-18-114.us-west-2.compute.internal>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 46 insertions(+)

DEBUG:root:
DEBUG:root:
DEBUG:root:warning: push.default is unset; its implicit value is changing in
Git 2.0 from 'matching' to 'simple'. To squelch this message
and maintain the current behavior after the default changes, use:

  git config --global push.default matching

To squelch this message and adopt the new behavior now, use:

  git config --global push.default simple

When push.default is set to 'matching', git will push local branches
to the remote branches that already exist with the same name.

In Git 2.0, Git will default to the more conservative 'simple'
behavior, which only pushes the current branch to the corresponding
remote branch that 'git pull' uses to update the current branch.

See 'git help config' and search for 'push.default' for further information.
(the 'simple' mode was introduced in Git 1.7.11. Use the similar mode
'current' instead of 'simple' if you sometimes use older versions of Git)

fatal: could not read Username for 'https://github.com': No such device or address

DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 16:35:38.521701
DEBUG:root:i finished updated the demo pages2015-06-07 16:36:05.942895
DEBUG:root:heres the currentworkingderectory/home/ubuntu/forgescan.github.io

DEBUG:root:
DEBUG:root:[master 482c60b] hapyak
 Committer: root <root@ip-172-31-18-114.us-west-2.compute.internal>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 46 insertions(+)

DEBUG:root:
DEBUG:root:
DEBUG:root:warning: push.default is unset; its implicit value is changing in
Git 2.0 from 'matching' to 'simple'. To squelch this message
and maintain the current behavior after the default changes, use:

  git config --global push.default matching

To squelch this message and adopt the new behavior now, use:

  git config --global push.default simple

When push.default is set to 'matching', git will push local branches
to the remote branches that already exist with the same name.

In Git 2.0, Git will default to the more conservative 'simple'
behavior, which only pushes the current branch to the corresponding
remote branch that 'git pull' uses to update the current branch.

See 'git help config' and search for 'push.default' for further information.
(the 'simple' mode was introduced in Git 1.7.11. Use the similar mode
'current' instead of 'simple' if you sometimes use older versions of Git)

fatal: could not read Username for 'https://github.com': No such device or address

DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 16:36:13.676463
DEBUG:root:i finished updated the demo pages2015-06-07 16:36:41.603142
DEBUG:root:heres the currentworkingderectory/home/ubuntu/forgescan.github.io

DEBUG:root:
DEBUG:root:[master f58069d] hapyak
 Committer: root <root@ip-172-31-18-114.us-west-2.compute.internal>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 46 insertions(+)

DEBUG:root:
DEBUG:root:
DEBUG:root:warning: push.default is unset; its implicit value is changing in
Git 2.0 from 'matching' to 'simple'. To squelch this message
and maintain the current behavior after the default changes, use:

  git config --global push.default matching

To squelch this message and adopt the new behavior now, use:

  git config --global push.default simple

When push.default is set to 'matching', git will push local branches
to the remote branches that already exist with the same name.

In Git 2.0, Git will default to the more conservative 'simple'
behavior, which only pushes the current branch to the corresponding
remote branch that 'git pull' uses to update the current branch.

See 'git help config' and search for 'push.default' for further information.
(the 'simple' mode was introduced in Git 1.7.11. Use the similar mode
'current' instead of 'simple' if you sometimes use older versions of Git)

fatal: could not read Username for 'https://github.com': No such device or address

DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 16:36:49.282534
DEBUG:root:i finished updated the demo pages2015-06-07 16:37:17.778154
DEBUG:root:heres the currentworkingderectory/home/ubuntu/forgescan.github.io

DEBUG:root:
DEBUG:root:[master 361f283] hapyak
 Committer: root <root@ip-172-31-18-114.us-west-2.compute.internal>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 46 insertions(+)

DEBUG:root:
DEBUG:root:
DEBUG:root:warning: push.default is unset; its implicit value is changing in
Git 2.0 from 'matching' to 'simple'. To squelch this message
and maintain the current behavior after the default changes, use:

  git config --global push.default matching

To squelch this message and adopt the new behavior now, use:

  git config --global push.default simple

When push.default is set to 'matching', git will push local branches
to the remote branches that already exist with the same name.

In Git 2.0, Git will default to the more conservative 'simple'
behavior, which only pushes the current branch to the corresponding
remote branch that 'git pull' uses to update the current branch.

See 'git help config' and search for 'push.default' for further information.
(the 'simple' mode was introduced in Git 1.7.11. Use the similar mode
'current' instead of 'simple' if you sometimes use older versions of Git)

fatal: could not read Username for 'https://github.com': No such device or address

DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 16:37:25.362453
DEBUG:root:i finished updated the demo pages2015-06-07 16:37:53.913916
DEBUG:root:heres the currentworkingderectory/home/ubuntu/forgescan.github.io

DEBUG:root:
DEBUG:root:[master 7b39204] hapyak
 Committer: root <root@ip-172-31-18-114.us-west-2.compute.internal>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 46 insertions(+)

DEBUG:root:
DEBUG:root:
DEBUG:root:warning: push.default is unset; its implicit value is changing in
Git 2.0 from 'matching' to 'simple'. To squelch this message
and maintain the current behavior after the default changes, use:

  git config --global push.default matching

To squelch this message and adopt the new behavior now, use:

  git config --global push.default simple

When push.default is set to 'matching', git will push local branches
to the remote branches that already exist with the same name.

In Git 2.0, Git will default to the more conservative 'simple'
behavior, which only pushes the current branch to the corresponding
remote branch that 'git pull' uses to update the current branch.

See 'git help config' and search for 'push.default' for further information.
(the 'simple' mode was introduced in Git 1.7.11. Use the similar mode
'current' instead of 'simple' if you sometimes use older versions of Git)

fatal: could not read Username for 'https://github.com': No such device or address

DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 16:38:01.656319
DEBUG:root:i finished updated the demo pages2015-06-07 16:38:30.094793
DEBUG:root:heres the currentworkingderectory/home/ubuntu/forgescan.github.io

DEBUG:root:
DEBUG:root:[master 212662c] hapyak
 Committer: root <root@ip-172-31-18-114.us-west-2.compute.internal>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 46 insertions(+)

DEBUG:root:
DEBUG:root:
DEBUG:root:warning: push.default is unset; its implicit value is changing in
Git 2.0 from 'matching' to 'simple'. To squelch this message
and maintain the current behavior after the default changes, use:

  git config --global push.default matching

To squelch this message and adopt the new behavior now, use:

  git config --global push.default simple

When push.default is set to 'matching', git will push local branches
to the remote branches that already exist with the same name.

In Git 2.0, Git will default to the more conservative 'simple'
behavior, which only pushes the current branch to the corresponding
remote branch that 'git pull' uses to update the current branch.

See 'git help config' and search for 'push.default' for further information.
(the 'simple' mode was introduced in Git 1.7.11. Use the similar mode
'current' instead of 'simple' if you sometimes use older versions of Git)

fatal: could not read Username for 'https://github.com': No such device or address

DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 16:38:37.566245
DEBUG:root:i finished updated the demo pages2015-06-07 16:39:08.761249
DEBUG:root:heres the currentworkingderectory/home/ubuntu/forgescan.github.io

DEBUG:root:
DEBUG:root:[master a07d5af] hapyak
 Committer: root <root@ip-172-31-18-114.us-west-2.compute.internal>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 46 insertions(+)

DEBUG:root:
DEBUG:root:
DEBUG:root:warning: push.default is unset; its implicit value is changing in
Git 2.0 from 'matching' to 'simple'. To squelch this message
and maintain the current behavior after the default changes, use:

  git config --global push.default matching

To squelch this message and adopt the new behavior now, use:

  git config --global push.default simple

When push.default is set to 'matching', git will push local branches
to the remote branches that already exist with the same name.

In Git 2.0, Git will default to the more conservative 'simple'
behavior, which only pushes the current branch to the corresponding
remote branch that 'git pull' uses to update the current branch.

See 'git help config' and search for 'push.default' for further information.
(the 'simple' mode was introduced in Git 1.7.11. Use the similar mode
'current' instead of 'simple' if you sometimes use older versions of Git)

fatal: could not read Username for 'https://github.com': No such device or address

DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 16:39:17.583199
DEBUG:root:i finished updated the demo pages2015-06-07 16:39:50.595264
DEBUG:root:heres the currentworkingderectory/home/ubuntu/forgescan.github.io

DEBUG:root:
DEBUG:root:[master f0c02aa] hapyak
 Committer: root <root@ip-172-31-18-114.us-west-2.compute.internal>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 46 insertions(+)

DEBUG:root:
DEBUG:root:
DEBUG:root:warning: push.default is unset; its implicit value is changing in
Git 2.0 from 'matching' to 'simple'. To squelch this message
and maintain the current behavior after the default changes, use:

  git config --global push.default matching

To squelch this message and adopt the new behavior now, use:

  git config --global push.default simple

When push.default is set to 'matching', git will push local branches
to the remote branches that already exist with the same name.

In Git 2.0, Git will default to the more conservative 'simple'
behavior, which only pushes the current branch to the corresponding
remote branch that 'git pull' uses to update the current branch.

See 'git help config' and search for 'push.default' for further information.
(the 'simple' mode was introduced in Git 1.7.11. Use the similar mode
'current' instead of 'simple' if you sometimes use older versions of Git)

fatal: could not read Username for 'https://github.com': No such device or address

DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 16:39:59.337985
DEBUG:root:i finished updated the demo pages2015-06-07 16:40:32.935455
DEBUG:root:heres the currentworkingderectory/home/ubuntu/forgescan.github.io

DEBUG:root:
DEBUG:root:[master c9262be] hapyak
 Committer: root <root@ip-172-31-18-114.us-west-2.compute.internal>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 46 insertions(+)

DEBUG:root:
DEBUG:root:
DEBUG:root:warning: push.default is unset; its implicit value is changing in
Git 2.0 from 'matching' to 'simple'. To squelch this message
and maintain the current behavior after the default changes, use:

  git config --global push.default matching

To squelch this message and adopt the new behavior now, use:

  git config --global push.default simple

When push.default is set to 'matching', git will push local branches
to the remote branches that already exist with the same name.

In Git 2.0, Git will default to the more conservative 'simple'
behavior, which only pushes the current branch to the corresponding
remote branch that 'git pull' uses to update the current branch.

See 'git help config' and search for 'push.default' for further information.
(the 'simple' mode was introduced in Git 1.7.11. Use the similar mode
'current' instead of 'simple' if you sometimes use older versions of Git)

fatal: could not read Username for 'https://github.com': No such device or address

DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 16:40:41.705297
DEBUG:root:i finished updated the demo pages2015-06-07 16:41:15.383754
DEBUG:root:heres the currentworkingderectory/home/ubuntu/forgescan.github.io

DEBUG:root:
DEBUG:root:[master bd3bc9a] hapyak
 Committer: root <root@ip-172-31-18-114.us-west-2.compute.internal>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 46 insertions(+)

DEBUG:root:
DEBUG:root:
DEBUG:root:warning: push.default is unset; its implicit value is changing in
Git 2.0 from 'matching' to 'simple'. To squelch this message
and maintain the current behavior after the default changes, use:

  git config --global push.default matching

To squelch this message and adopt the new behavior now, use:

  git config --global push.default simple

When push.default is set to 'matching', git will push local branches
to the remote branches that already exist with the same name.

In Git 2.0, Git will default to the more conservative 'simple'
behavior, which only pushes the current branch to the corresponding
remote branch that 'git pull' uses to update the current branch.

See 'git help config' and search for 'push.default' for further information.
(the 'simple' mode was introduced in Git 1.7.11. Use the similar mode
'current' instead of 'simple' if you sometimes use older versions of Git)

fatal: could not read Username for 'https://github.com': No such device or address

DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 16:41:24.282607
DEBUG:root:i finished updated the demo pages2015-06-07 16:41:59.000785
DEBUG:root:heres the currentworkingderectory/home/ubuntu/forgescan.github.io

DEBUG:root:
DEBUG:root:[master 11e3ac5] hapyak
 Committer: root <root@ip-172-31-18-114.us-west-2.compute.internal>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 46 insertions(+)

DEBUG:root:
DEBUG:root:
DEBUG:root:warning: push.default is unset; its implicit value is changing in
Git 2.0 from 'matching' to 'simple'. To squelch this message
and maintain the current behavior after the default changes, use:

  git config --global push.default matching

To squelch this message and adopt the new behavior now, use:

  git config --global push.default simple

When push.default is set to 'matching', git will push local branches
to the remote branches that already exist with the same name.

In Git 2.0, Git will default to the more conservative 'simple'
behavior, which only pushes the current branch to the corresponding
remote branch that 'git pull' uses to update the current branch.

See 'git help config' and search for 'push.default' for further information.
(the 'simple' mode was introduced in Git 1.7.11. Use the similar mode
'current' instead of 'simple' if you sometimes use older versions of Git)

fatal: could not read Username for 'https://github.com': No such device or address

DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 16:42:07.883711
DEBUG:root:i finished updated the demo pages2015-06-07 16:42:41.413133
DEBUG:root:heres the currentworkingderectory/home/ubuntu/forgescan.github.io

DEBUG:root:
DEBUG:root:[master b82f4ef] hapyak
 Committer: root <root@ip-172-31-18-114.us-west-2.compute.internal>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 46 insertions(+)

DEBUG:root:
DEBUG:root:
DEBUG:root:warning: push.default is unset; its implicit value is changing in
Git 2.0 from 'matching' to 'simple'. To squelch this message
and maintain the current behavior after the default changes, use:

  git config --global push.default matching

To squelch this message and adopt the new behavior now, use:

  git config --global push.default simple

When push.default is set to 'matching', git will push local branches
to the remote branches that already exist with the same name.

In Git 2.0, Git will default to the more conservative 'simple'
behavior, which only pushes the current branch to the corresponding
remote branch that 'git pull' uses to update the current branch.

See 'git help config' and search for 'push.default' for further information.
(the 'simple' mode was introduced in Git 1.7.11. Use the similar mode
'current' instead of 'simple' if you sometimes use older versions of Git)

fatal: could not read Username for 'https://github.com': No such device or address

DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 16:42:50.306921
DEBUG:root:i finished updated the demo pages2015-06-07 16:43:23.253626
DEBUG:root:heres the currentworkingderectory/home/ubuntu/forgescan.github.io

DEBUG:root:
DEBUG:root:[master 372822c] hapyak
 Committer: root <root@ip-172-31-18-114.us-west-2.compute.internal>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 46 insertions(+)

DEBUG:root:
DEBUG:root:
DEBUG:root:warning: push.default is unset; its implicit value is changing in
Git 2.0 from 'matching' to 'simple'. To squelch this message
and maintain the current behavior after the default changes, use:

  git config --global push.default matching

To squelch this message and adopt the new behavior now, use:

  git config --global push.default simple

When push.default is set to 'matching', git will push local branches
to the remote branches that already exist with the same name.

In Git 2.0, Git will default to the more conservative 'simple'
behavior, which only pushes the current branch to the corresponding
remote branch that 'git pull' uses to update the current branch.

See 'git help config' and search for 'push.default' for further information.
(the 'simple' mode was introduced in Git 1.7.11. Use the similar mode
'current' instead of 'simple' if you sometimes use older versions of Git)

fatal: could not read Username for 'https://github.com': No such device or address

DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 16:43:32.138550
DEBUG:root:i finished updated the demo pages2015-06-07 16:44:05.869409
DEBUG:root:heres the currentworkingderectory/home/ubuntu/forgescan.github.io

DEBUG:root:
DEBUG:root:[master 2f50918] hapyak
 Committer: root <root@ip-172-31-18-114.us-west-2.compute.internal>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 46 insertions(+)

DEBUG:root:
DEBUG:root:
DEBUG:root:warning: push.default is unset; its implicit value is changing in
Git 2.0 from 'matching' to 'simple'. To squelch this message
and maintain the current behavior after the default changes, use:

  git config --global push.default matching

To squelch this message and adopt the new behavior now, use:

  git config --global push.default simple

When push.default is set to 'matching', git will push local branches
to the remote branches that already exist with the same name.

In Git 2.0, Git will default to the more conservative 'simple'
behavior, which only pushes the current branch to the corresponding
remote branch that 'git pull' uses to update the current branch.

See 'git help config' and search for 'push.default' for further information.
(the 'simple' mode was introduced in Git 1.7.11. Use the similar mode
'current' instead of 'simple' if you sometimes use older versions of Git)

fatal: could not read Username for 'https://github.com': No such device or address

DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 16:44:14.596918
DEBUG:root:i finished updated the demo pages2015-06-07 16:44:47.661996
DEBUG:root:heres the currentworkingderectory/home/ubuntu/forgescan.github.io

DEBUG:root:
DEBUG:root:[master d53129c] hapyak
 Committer: root <root@ip-172-31-18-114.us-west-2.compute.internal>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 46 insertions(+)

DEBUG:root:
DEBUG:root:
DEBUG:root:warning: push.default is unset; its implicit value is changing in
Git 2.0 from 'matching' to 'simple'. To squelch this message
and maintain the current behavior after the default changes, use:

  git config --global push.default matching

To squelch this message and adopt the new behavior now, use:

  git config --global push.default simple

When push.default is set to 'matching', git will push local branches
to the remote branches that already exist with the same name.

In Git 2.0, Git will default to the more conservative 'simple'
behavior, which only pushes the current branch to the corresponding
remote branch that 'git pull' uses to update the current branch.

See 'git help config' and search for 'push.default' for further information.
(the 'simple' mode was introduced in Git 1.7.11. Use the similar mode
'current' instead of 'simple' if you sometimes use older versions of Git)

fatal: could not read Username for 'https://github.com': No such device or address

DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 16:44:56.360722
DEBUG:root:i finished updated the demo pages2015-06-07 16:45:29.487816
DEBUG:root:heres the currentworkingderectory/home/ubuntu/forgescan.github.io

DEBUG:root:
DEBUG:root:[master 216c99a] hapyak
 Committer: root <root@ip-172-31-18-114.us-west-2.compute.internal>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 46 insertions(+)

DEBUG:root:
DEBUG:root:
DEBUG:root:warning: push.default is unset; its implicit value is changing in
Git 2.0 from 'matching' to 'simple'. To squelch this message
and maintain the current behavior after the default changes, use:

  git config --global push.default matching

To squelch this message and adopt the new behavior now, use:

  git config --global push.default simple

When push.default is set to 'matching', git will push local branches
to the remote branches that already exist with the same name.

In Git 2.0, Git will default to the more conservative 'simple'
behavior, which only pushes the current branch to the corresponding
remote branch that 'git pull' uses to update the current branch.

See 'git help config' and search for 'push.default' for further information.
(the 'simple' mode was introduced in Git 1.7.11. Use the similar mode
'current' instead of 'simple' if you sometimes use older versions of Git)

fatal: could not read Username for 'https://github.com': No such device or address

DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 16:45:38.431655
DEBUG:root:i finished updated the demo pages2015-06-07 16:46:11.493100
DEBUG:root:heres the currentworkingderectory/home/ubuntu/forgescan.github.io

DEBUG:root:
DEBUG:root:[master fa5aefc] hapyak
 Committer: root <root@ip-172-31-18-114.us-west-2.compute.internal>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 46 insertions(+)

DEBUG:root:
DEBUG:root:
DEBUG:root:warning: push.default is unset; its implicit value is changing in
Git 2.0 from 'matching' to 'simple'. To squelch this message
and maintain the current behavior after the default changes, use:

  git config --global push.default matching

To squelch this message and adopt the new behavior now, use:

  git config --global push.default simple

When push.default is set to 'matching', git will push local branches
to the remote branches that already exist with the same name.

In Git 2.0, Git will default to the more conservative 'simple'
behavior, which only pushes the current branch to the corresponding
remote branch that 'git pull' uses to update the current branch.

See 'git help config' and search for 'push.default' for further information.
(the 'simple' mode was introduced in Git 1.7.11. Use the similar mode
'current' instead of 'simple' if you sometimes use older versions of Git)

fatal: could not read Username for 'https://github.com': No such device or address

DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 16:46:20.360341
DEBUG:root:i finished updated the demo pages2015-06-07 16:46:55.538281
DEBUG:root:heres the currentworkingderectory/home/ubuntu/forgescan.github.io

DEBUG:root:
DEBUG:root:[master bc97e94] hapyak
 Committer: root <root@ip-172-31-18-114.us-west-2.compute.internal>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 46 insertions(+)

DEBUG:root:
DEBUG:root:
DEBUG:root:warning: push.default is unset; its implicit value is changing in
Git 2.0 from 'matching' to 'simple'. To squelch this message
and maintain the current behavior after the default changes, use:

  git config --global push.default matching

To squelch this message and adopt the new behavior now, use:

  git config --global push.default simple

When push.default is set to 'matching', git will push local branches
to the remote branches that already exist with the same name.

In Git 2.0, Git will default to the more conservative 'simple'
behavior, which only pushes the current branch to the corresponding
remote branch that 'git pull' uses to update the current branch.

See 'git help config' and search for 'push.default' for further information.
(the 'simple' mode was introduced in Git 1.7.11. Use the similar mode
'current' instead of 'simple' if you sometimes use older versions of Git)

fatal: could not read Username for 'https://github.com': No such device or address

DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 16:47:04.616600
DEBUG:root:i finished updated the demo pages2015-06-07 16:47:38.957534
DEBUG:root:heres the currentworkingderectory/home/ubuntu/forgescan.github.io

DEBUG:root:
DEBUG:root:[master 85629f6] hapyak
 Committer: root <root@ip-172-31-18-114.us-west-2.compute.internal>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 46 insertions(+)

DEBUG:root:
DEBUG:root:
DEBUG:root:warning: push.default is unset; its implicit value is changing in
Git 2.0 from 'matching' to 'simple'. To squelch this message
and maintain the current behavior after the default changes, use:

  git config --global push.default matching

To squelch this message and adopt the new behavior now, use:

  git config --global push.default simple

When push.default is set to 'matching', git will push local branches
to the remote branches that already exist with the same name.

In Git 2.0, Git will default to the more conservative 'simple'
behavior, which only pushes the current branch to the corresponding
remote branch that 'git pull' uses to update the current branch.

See 'git help config' and search for 'push.default' for further information.
(the 'simple' mode was introduced in Git 1.7.11. Use the similar mode
'current' instead of 'simple' if you sometimes use older versions of Git)

fatal: could not read Username for 'https://github.com': No such device or address

DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 16:47:47.614149
DEBUG:root:i finished updated the demo pages2015-06-07 16:48:21.928514
DEBUG:root:heres the currentworkingderectory/home/ubuntu/forgescan.github.io

DEBUG:root:
DEBUG:root:[master d74f59f] hapyak
 Committer: root <root@ip-172-31-18-114.us-west-2.compute.internal>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 46 insertions(+)

DEBUG:root:
DEBUG:root:
DEBUG:root:warning: push.default is unset; its implicit value is changing in
Git 2.0 from 'matching' to 'simple'. To squelch this message
and maintain the current behavior after the default changes, use:

  git config --global push.default matching

To squelch this message and adopt the new behavior now, use:

  git config --global push.default simple

When push.default is set to 'matching', git will push local branches
to the remote branches that already exist with the same name.

In Git 2.0, Git will default to the more conservative 'simple'
behavior, which only pushes the current branch to the corresponding
remote branch that 'git pull' uses to update the current branch.

See 'git help config' and search for 'push.default' for further information.
(the 'simple' mode was introduced in Git 1.7.11. Use the similar mode
'current' instead of 'simple' if you sometimes use older versions of Git)

fatal: could not read Username for 'https://github.com': No such device or address

DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 16:48:30.942563
DEBUG:root:i finished updated the demo pages2015-06-07 16:49:05.113034
DEBUG:root:heres the currentworkingderectory/home/ubuntu/forgescan.github.io

DEBUG:root:
DEBUG:root:[master 0d30860] hapyak
 Committer: root <root@ip-172-31-18-114.us-west-2.compute.internal>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 46 insertions(+)

DEBUG:root:
DEBUG:root:
DEBUG:root:warning: push.default is unset; its implicit value is changing in
Git 2.0 from 'matching' to 'simple'. To squelch this message
and maintain the current behavior after the default changes, use:

  git config --global push.default matching

To squelch this message and adopt the new behavior now, use:

  git config --global push.default simple

When push.default is set to 'matching', git will push local branches
to the remote branches that already exist with the same name.

In Git 2.0, Git will default to the more conservative 'simple'
behavior, which only pushes the current branch to the corresponding
remote branch that 'git pull' uses to update the current branch.

See 'git help config' and search for 'push.default' for further information.
(the 'simple' mode was introduced in Git 1.7.11. Use the similar mode
'current' instead of 'simple' if you sometimes use older versions of Git)

fatal: could not read Username for 'https://github.com': No such device or address

DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 16:49:14.317441
DEBUG:root:i finished updated the demo pages2015-06-07 16:49:47.830279
DEBUG:root:heres the currentworkingderectory/home/ubuntu/forgescan.github.io

DEBUG:root:
DEBUG:root:[master 1c49dc6] hapyak
 Committer: root <root@ip-172-31-18-114.us-west-2.compute.internal>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 46 insertions(+)

DEBUG:root:
DEBUG:root:
DEBUG:root:warning: push.default is unset; its implicit value is changing in
Git 2.0 from 'matching' to 'simple'. To squelch this message
and maintain the current behavior after the default changes, use:

  git config --global push.default matching

To squelch this message and adopt the new behavior now, use:

  git config --global push.default simple

When push.default is set to 'matching', git will push local branches
to the remote branches that already exist with the same name.

In Git 2.0, Git will default to the more conservative 'simple'
behavior, which only pushes the current branch to the corresponding
remote branch that 'git pull' uses to update the current branch.

See 'git help config' and search for 'push.default' for further information.
(the 'simple' mode was introduced in Git 1.7.11. Use the similar mode
'current' instead of 'simple' if you sometimes use older versions of Git)

fatal: could not read Username for 'https://github.com': No such device or address

DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 16:49:56.580008
DEBUG:root:i finished updated the demo pages2015-06-07 16:50:30.190353
DEBUG:root:heres the currentworkingderectory/home/ubuntu/forgescan.github.io

DEBUG:root:
DEBUG:root:[master 46b9900] hapyak
 Committer: root <root@ip-172-31-18-114.us-west-2.compute.internal>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 46 insertions(+)

DEBUG:root:
DEBUG:root:
DEBUG:root:warning: push.default is unset; its implicit value is changing in
Git 2.0 from 'matching' to 'simple'. To squelch this message
and maintain the current behavior after the default changes, use:

  git config --global push.default matching

To squelch this message and adopt the new behavior now, use:

  git config --global push.default simple

When push.default is set to 'matching', git will push local branches
to the remote branches that already exist with the same name.

In Git 2.0, Git will default to the more conservative 'simple'
behavior, which only pushes the current branch to the corresponding
remote branch that 'git pull' uses to update the current branch.

See 'git help config' and search for 'push.default' for further information.
(the 'simple' mode was introduced in Git 1.7.11. Use the similar mode
'current' instead of 'simple' if you sometimes use older versions of Git)

fatal: could not read Username for 'https://github.com': No such device or address

DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 16:50:39.012137
DEBUG:root:i finished updated the demo pages2015-06-07 16:51:12.208021
DEBUG:root:heres the currentworkingderectory/home/ubuntu/forgescan.github.io

DEBUG:root:
DEBUG:root:[master d28cfbc] hapyak
 Committer: root <root@ip-172-31-18-114.us-west-2.compute.internal>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 46 insertions(+)

DEBUG:root:
DEBUG:root:
DEBUG:root:warning: push.default is unset; its implicit value is changing in
Git 2.0 from 'matching' to 'simple'. To squelch this message
and maintain the current behavior after the default changes, use:

  git config --global push.default matching

To squelch this message and adopt the new behavior now, use:

  git config --global push.default simple

When push.default is set to 'matching', git will push local branches
to the remote branches that already exist with the same name.

In Git 2.0, Git will default to the more conservative 'simple'
behavior, which only pushes the current branch to the corresponding
remote branch that 'git pull' uses to update the current branch.

See 'git help config' and search for 'push.default' for further information.
(the 'simple' mode was introduced in Git 1.7.11. Use the similar mode
'current' instead of 'simple' if you sometimes use older versions of Git)

fatal: could not read Username for 'https://github.com': No such device or address

DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 16:51:21.144265
DEBUG:root:i finished updated the demo pages2015-06-07 16:51:54.298701
DEBUG:root:heres the currentworkingderectory/home/ubuntu/forgescan.github.io

DEBUG:root:
DEBUG:root:[master 29143a0] hapyak
 Committer: root <root@ip-172-31-18-114.us-west-2.compute.internal>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 46 insertions(+)

DEBUG:root:
DEBUG:root:
DEBUG:root:warning: push.default is unset; its implicit value is changing in
Git 2.0 from 'matching' to 'simple'. To squelch this message
and maintain the current behavior after the default changes, use:

  git config --global push.default matching

To squelch this message and adopt the new behavior now, use:

  git config --global push.default simple

When push.default is set to 'matching', git will push local branches
to the remote branches that already exist with the same name.

In Git 2.0, Git will default to the more conservative 'simple'
behavior, which only pushes the current branch to the corresponding
remote branch that 'git pull' uses to update the current branch.

See 'git help config' and search for 'push.default' for further information.
(the 'simple' mode was introduced in Git 1.7.11. Use the similar mode
'current' instead of 'simple' if you sometimes use older versions of Git)

fatal: could not read Username for 'https://github.com': No such device or address

DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 16:52:03.030477
DEBUG:root:i finished updated the demo pages2015-06-07 16:52:37.057649
DEBUG:root:heres the currentworkingderectory/home/ubuntu/forgescan.github.io

DEBUG:root:
DEBUG:root:[master 04d8c35] hapyak
 Committer: root <root@ip-172-31-18-114.us-west-2.compute.internal>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 46 insertions(+)

DEBUG:root:
DEBUG:root:
DEBUG:root:warning: push.default is unset; its implicit value is changing in
Git 2.0 from 'matching' to 'simple'. To squelch this message
and maintain the current behavior after the default changes, use:

  git config --global push.default matching

To squelch this message and adopt the new behavior now, use:

  git config --global push.default simple

When push.default is set to 'matching', git will push local branches
to the remote branches that already exist with the same name.

In Git 2.0, Git will default to the more conservative 'simple'
behavior, which only pushes the current branch to the corresponding
remote branch that 'git pull' uses to update the current branch.

See 'git help config' and search for 'push.default' for further information.
(the 'simple' mode was introduced in Git 1.7.11. Use the similar mode
'current' instead of 'simple' if you sometimes use older versions of Git)

fatal: could not read Username for 'https://github.com': No such device or address

DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 16:52:45.845749
DEBUG:root:i finished updated the demo pages2015-06-07 16:53:18.864317
DEBUG:root:heres the currentworkingderectory/home/ubuntu/forgescan.github.io

DEBUG:root:
DEBUG:root:[master 3497fb7] hapyak
 Committer: root <root@ip-172-31-18-114.us-west-2.compute.internal>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 46 insertions(+)

DEBUG:root:
DEBUG:root:
DEBUG:root:warning: push.default is unset; its implicit value is changing in
Git 2.0 from 'matching' to 'simple'. To squelch this message
and maintain the current behavior after the default changes, use:

  git config --global push.default matching

To squelch this message and adopt the new behavior now, use:

  git config --global push.default simple

When push.default is set to 'matching', git will push local branches
to the remote branches that already exist with the same name.

In Git 2.0, Git will default to the more conservative 'simple'
behavior, which only pushes the current branch to the corresponding
remote branch that 'git pull' uses to update the current branch.

See 'git help config' and search for 'push.default' for further information.
(the 'simple' mode was introduced in Git 1.7.11. Use the similar mode
'current' instead of 'simple' if you sometimes use older versions of Git)

fatal: could not read Username for 'https://github.com': No such device or address

DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 16:53:27.802625
DEBUG:root:i finished updated the demo pages2015-06-07 16:54:01.452014
DEBUG:root:heres the currentworkingderectory/home/ubuntu/forgescan.github.io

DEBUG:root:
DEBUG:root:[master b475286] hapyak
 Committer: root <root@ip-172-31-18-114.us-west-2.compute.internal>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 46 insertions(+)

DEBUG:root:
DEBUG:root:
DEBUG:root:warning: push.default is unset; its implicit value is changing in
Git 2.0 from 'matching' to 'simple'. To squelch this message
and maintain the current behavior after the default changes, use:

  git config --global push.default matching

To squelch this message and adopt the new behavior now, use:

  git config --global push.default simple

When push.default is set to 'matching', git will push local branches
to the remote branches that already exist with the same name.

In Git 2.0, Git will default to the more conservative 'simple'
behavior, which only pushes the current branch to the corresponding
remote branch that 'git pull' uses to update the current branch.

See 'git help config' and search for 'push.default' for further information.
(the 'simple' mode was introduced in Git 1.7.11. Use the similar mode
'current' instead of 'simple' if you sometimes use older versions of Git)

fatal: could not read Username for 'https://github.com': No such device or address

DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 16:54:10.303429
DEBUG:root:i finished updated the demo pages2015-06-07 16:54:43.148820
DEBUG:root:heres the currentworkingderectory/home/ubuntu/forgescan.github.io

DEBUG:root:
DEBUG:root:[master 1ad1a0f] hapyak
 Committer: root <root@ip-172-31-18-114.us-west-2.compute.internal>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 46 insertions(+)

DEBUG:root:
DEBUG:root:
DEBUG:root:warning: push.default is unset; its implicit value is changing in
Git 2.0 from 'matching' to 'simple'. To squelch this message
and maintain the current behavior after the default changes, use:

  git config --global push.default matching

To squelch this message and adopt the new behavior now, use:

  git config --global push.default simple

When push.default is set to 'matching', git will push local branches
to the remote branches that already exist with the same name.

In Git 2.0, Git will default to the more conservative 'simple'
behavior, which only pushes the current branch to the corresponding
remote branch that 'git pull' uses to update the current branch.

See 'git help config' and search for 'push.default' for further information.
(the 'simple' mode was introduced in Git 1.7.11. Use the similar mode
'current' instead of 'simple' if you sometimes use older versions of Git)

fatal: could not read Username for 'https://github.com': No such device or address

DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 16:54:52.169307
DEBUG:root:i finished updated the demo pages2015-06-07 16:55:27.330876
DEBUG:root:heres the currentworkingderectory/home/ubuntu/forgescan.github.io

DEBUG:root:
DEBUG:root:[master 998bd8d] hapyak
 Committer: root <root@ip-172-31-18-114.us-west-2.compute.internal>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 46 insertions(+)

DEBUG:root:
DEBUG:root:
DEBUG:root:warning: push.default is unset; its implicit value is changing in
Git 2.0 from 'matching' to 'simple'. To squelch this message
and maintain the current behavior after the default changes, use:

  git config --global push.default matching

To squelch this message and adopt the new behavior now, use:

  git config --global push.default simple

When push.default is set to 'matching', git will push local branches
to the remote branches that already exist with the same name.

In Git 2.0, Git will default to the more conservative 'simple'
behavior, which only pushes the current branch to the corresponding
remote branch that 'git pull' uses to update the current branch.

See 'git help config' and search for 'push.default' for further information.
(the 'simple' mode was introduced in Git 1.7.11. Use the similar mode
'current' instead of 'simple' if you sometimes use older versions of Git)

fatal: could not read Username for 'https://github.com': No such device or address

DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 16:55:36.138610
DEBUG:root:i finished updated the demo pages2015-06-07 16:56:09.171642
DEBUG:root:heres the currentworkingderectory/home/ubuntu/forgescan.github.io

DEBUG:root:
DEBUG:root:[master 6fe2cfd] hapyak
 Committer: root <root@ip-172-31-18-114.us-west-2.compute.internal>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 46 insertions(+)

DEBUG:root:
DEBUG:root:
DEBUG:root:warning: push.default is unset; its implicit value is changing in
Git 2.0 from 'matching' to 'simple'. To squelch this message
and maintain the current behavior after the default changes, use:

  git config --global push.default matching

To squelch this message and adopt the new behavior now, use:

  git config --global push.default simple

When push.default is set to 'matching', git will push local branches
to the remote branches that already exist with the same name.

In Git 2.0, Git will default to the more conservative 'simple'
behavior, which only pushes the current branch to the corresponding
remote branch that 'git pull' uses to update the current branch.

See 'git help config' and search for 'push.default' for further information.
(the 'simple' mode was introduced in Git 1.7.11. Use the similar mode
'current' instead of 'simple' if you sometimes use older versions of Git)

fatal: could not read Username for 'https://github.com': No such device or address

DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 16:56:18.193405
DEBUG:root:i finished updated the demo pages2015-06-07 16:56:52.052657
DEBUG:root:heres the currentworkingderectory/home/ubuntu/forgescan.github.io

DEBUG:root:
DEBUG:root:[master 7b4ad70] hapyak
 Committer: root <root@ip-172-31-18-114.us-west-2.compute.internal>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 46 insertions(+)

DEBUG:root:
DEBUG:root:
DEBUG:root:warning: push.default is unset; its implicit value is changing in
Git 2.0 from 'matching' to 'simple'. To squelch this message
and maintain the current behavior after the default changes, use:

  git config --global push.default matching

To squelch this message and adopt the new behavior now, use:

  git config --global push.default simple

When push.default is set to 'matching', git will push local branches
to the remote branches that already exist with the same name.

In Git 2.0, Git will default to the more conservative 'simple'
behavior, which only pushes the current branch to the corresponding
remote branch that 'git pull' uses to update the current branch.

See 'git help config' and search for 'push.default' for further information.
(the 'simple' mode was introduced in Git 1.7.11. Use the similar mode
'current' instead of 'simple' if you sometimes use older versions of Git)

fatal: could not read Username for 'https://github.com': No such device or address

DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 16:57:00.865848
DEBUG:root:i finished updated the demo pages2015-06-07 16:57:33.746340
DEBUG:root:heres the currentworkingderectory/home/ubuntu/forgescan.github.io

DEBUG:root:
DEBUG:root:[master 977085c] hapyak
 Committer: root <root@ip-172-31-18-114.us-west-2.compute.internal>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 46 insertions(+)

DEBUG:root:
DEBUG:root:
DEBUG:root:warning: push.default is unset; its implicit value is changing in
Git 2.0 from 'matching' to 'simple'. To squelch this message
and maintain the current behavior after the default changes, use:

  git config --global push.default matching

To squelch this message and adopt the new behavior now, use:

  git config --global push.default simple

When push.default is set to 'matching', git will push local branches
to the remote branches that already exist with the same name.

In Git 2.0, Git will default to the more conservative 'simple'
behavior, which only pushes the current branch to the corresponding
remote branch that 'git pull' uses to update the current branch.

See 'git help config' and search for 'push.default' for further information.
(the 'simple' mode was introduced in Git 1.7.11. Use the similar mode
'current' instead of 'simple' if you sometimes use older versions of Git)

fatal: could not read Username for 'https://github.com': No such device or address

DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 16:57:42.562240
DEBUG:root:i finished updated the demo pages2015-06-07 16:58:15.868823
DEBUG:root:heres the currentworkingderectory/home/ubuntu/forgescan.github.io

DEBUG:root:
DEBUG:root:[master e22e9e0] hapyak
 Committer: root <root@ip-172-31-18-114.us-west-2.compute.internal>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 46 insertions(+)

DEBUG:root:
DEBUG:root:
DEBUG:root:warning: push.default is unset; its implicit value is changing in
Git 2.0 from 'matching' to 'simple'. To squelch this message
and maintain the current behavior after the default changes, use:

  git config --global push.default matching

To squelch this message and adopt the new behavior now, use:

  git config --global push.default simple

When push.default is set to 'matching', git will push local branches
to the remote branches that already exist with the same name.

In Git 2.0, Git will default to the more conservative 'simple'
behavior, which only pushes the current branch to the corresponding
remote branch that 'git pull' uses to update the current branch.

See 'git help config' and search for 'push.default' for further information.
(the 'simple' mode was introduced in Git 1.7.11. Use the similar mode
'current' instead of 'simple' if you sometimes use older versions of Git)

fatal: could not read Username for 'https://github.com': No such device or address

DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 16:58:24.645091
DEBUG:root:i finished updated the demo pages2015-06-07 16:58:56.464485
DEBUG:root:heres the currentworkingderectory/home/ubuntu/forgescan.github.io

DEBUG:root:
DEBUG:root:[master ba221f8] hapyak
 Committer: root <root@ip-172-31-18-114.us-west-2.compute.internal>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 46 insertions(+)

DEBUG:root:
DEBUG:root:
DEBUG:root:warning: push.default is unset; its implicit value is changing in
Git 2.0 from 'matching' to 'simple'. To squelch this message
and maintain the current behavior after the default changes, use:

  git config --global push.default matching

To squelch this message and adopt the new behavior now, use:

  git config --global push.default simple

When push.default is set to 'matching', git will push local branches
to the remote branches that already exist with the same name.

In Git 2.0, Git will default to the more conservative 'simple'
behavior, which only pushes the current branch to the corresponding
remote branch that 'git pull' uses to update the current branch.

See 'git help config' and search for 'push.default' for further information.
(the 'simple' mode was introduced in Git 1.7.11. Use the similar mode
'current' instead of 'simple' if you sometimes use older versions of Git)

fatal: could not read Username for 'https://github.com': No such device or address

DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 16:59:03.907211
DEBUG:root:i finished updated the demo pages2015-06-07 16:59:33.176045
DEBUG:root:heres the currentworkingderectory/home/ubuntu/forgescan.github.io

DEBUG:root:
DEBUG:root:[master a2368a0] hapyak
 Committer: root <root@ip-172-31-18-114.us-west-2.compute.internal>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 46 insertions(+)

DEBUG:root:
DEBUG:root:
DEBUG:root:warning: push.default is unset; its implicit value is changing in
Git 2.0 from 'matching' to 'simple'. To squelch this message
and maintain the current behavior after the default changes, use:

  git config --global push.default matching

To squelch this message and adopt the new behavior now, use:

  git config --global push.default simple

When push.default is set to 'matching', git will push local branches
to the remote branches that already exist with the same name.

In Git 2.0, Git will default to the more conservative 'simple'
behavior, which only pushes the current branch to the corresponding
remote branch that 'git pull' uses to update the current branch.

See 'git help config' and search for 'push.default' for further information.
(the 'simple' mode was introduced in Git 1.7.11. Use the similar mode
'current' instead of 'simple' if you sometimes use older versions of Git)

fatal: could not read Username for 'https://github.com': No such device or address

DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 16:59:41.038217
DEBUG:root:i finished updated the demo pages2015-06-07 17:00:11.533043
DEBUG:root:heres the currentworkingderectory/home/ubuntu/forgescan.github.io

DEBUG:root:
DEBUG:root:[master c4a74d0] hapyak
 Committer: root <root@ip-172-31-18-114.us-west-2.compute.internal>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 46 insertions(+)

DEBUG:root:
DEBUG:root:
DEBUG:root:warning: push.default is unset; its implicit value is changing in
Git 2.0 from 'matching' to 'simple'. To squelch this message
and maintain the current behavior after the default changes, use:

  git config --global push.default matching

To squelch this message and adopt the new behavior now, use:

  git config --global push.default simple

When push.default is set to 'matching', git will push local branches
to the remote branches that already exist with the same name.

In Git 2.0, Git will default to the more conservative 'simple'
behavior, which only pushes the current branch to the corresponding
remote branch that 'git pull' uses to update the current branch.

See 'git help config' and search for 'push.default' for further information.
(the 'simple' mode was introduced in Git 1.7.11. Use the similar mode
'current' instead of 'simple' if you sometimes use older versions of Git)

fatal: could not read Username for 'https://github.com': No such device or address

DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 17:00:19.078141
DEBUG:root:i finished updated the demo pages2015-06-07 17:00:47.905873
DEBUG:root:heres the currentworkingderectory/home/ubuntu/forgescan.github.io

DEBUG:root:
DEBUG:root:[master 44a7396] hapyak
 Committer: root <root@ip-172-31-18-114.us-west-2.compute.internal>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 46 insertions(+)

DEBUG:root:
DEBUG:root:
DEBUG:root:warning: push.default is unset; its implicit value is changing in
Git 2.0 from 'matching' to 'simple'. To squelch this message
and maintain the current behavior after the default changes, use:

  git config --global push.default matching

To squelch this message and adopt the new behavior now, use:

  git config --global push.default simple

When push.default is set to 'matching', git will push local branches
to the remote branches that already exist with the same name.

In Git 2.0, Git will default to the more conservative 'simple'
behavior, which only pushes the current branch to the corresponding
remote branch that 'git pull' uses to update the current branch.

See 'git help config' and search for 'push.default' for further information.
(the 'simple' mode was introduced in Git 1.7.11. Use the similar mode
'current' instead of 'simple' if you sometimes use older versions of Git)

fatal: could not read Username for 'https://github.com': No such device or address

DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 17:00:55.905988
DEBUG:root:i finished updated the demo pages2015-06-07 17:01:23.504396
DEBUG:root:heres the currentworkingderectory/home/ubuntu/forgescan.github.io

DEBUG:root:
DEBUG:root:[master 2e865c6] hapyak
 Committer: root <root@ip-172-31-18-114.us-west-2.compute.internal>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 46 insertions(+)

DEBUG:root:
DEBUG:root:
DEBUG:root:warning: push.default is unset; its implicit value is changing in
Git 2.0 from 'matching' to 'simple'. To squelch this message
and maintain the current behavior after the default changes, use:

  git config --global push.default matching

To squelch this message and adopt the new behavior now, use:

  git config --global push.default simple

When push.default is set to 'matching', git will push local branches
to the remote branches that already exist with the same name.

In Git 2.0, Git will default to the more conservative 'simple'
behavior, which only pushes the current branch to the corresponding
remote branch that 'git pull' uses to update the current branch.

See 'git help config' and search for 'push.default' for further information.
(the 'simple' mode was introduced in Git 1.7.11. Use the similar mode
'current' instead of 'simple' if you sometimes use older versions of Git)

fatal: could not read Username for 'https://github.com': No such device or address

DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 17:01:31.398561
DEBUG:root:i finished updated the demo pages2015-06-07 17:02:07.722287
DEBUG:root:heres the currentworkingderectory/home/ubuntu/forgescan.github.io

DEBUG:root:
DEBUG:root:[master dab69ea] hapyak
 Committer: root <root@ip-172-31-18-114.us-west-2.compute.internal>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 46 insertions(+)

DEBUG:root:
DEBUG:root:
DEBUG:root:warning: push.default is unset; its implicit value is changing in
Git 2.0 from 'matching' to 'simple'. To squelch this message
and maintain the current behavior after the default changes, use:

  git config --global push.default matching

To squelch this message and adopt the new behavior now, use:

  git config --global push.default simple

When push.default is set to 'matching', git will push local branches
to the remote branches that already exist with the same name.

In Git 2.0, Git will default to the more conservative 'simple'
behavior, which only pushes the current branch to the corresponding
remote branch that 'git pull' uses to update the current branch.

See 'git help config' and search for 'push.default' for further information.
(the 'simple' mode was introduced in Git 1.7.11. Use the similar mode
'current' instead of 'simple' if you sometimes use older versions of Git)

fatal: could not read Username for 'https://github.com': No such device or address

DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 17:02:15.527574
DEBUG:root:i finished updated the demo pages2015-06-07 17:02:42.726239
DEBUG:root:heres the currentworkingderectory/home/ubuntu/forgescan.github.io

DEBUG:root:
DEBUG:root:[master 0b3382a] hapyak
 Committer: root <root@ip-172-31-18-114.us-west-2.compute.internal>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 46 insertions(+)

DEBUG:root:
DEBUG:root:
DEBUG:root:warning: push.default is unset; its implicit value is changing in
Git 2.0 from 'matching' to 'simple'. To squelch this message
and maintain the current behavior after the default changes, use:

  git config --global push.default matching

To squelch this message and adopt the new behavior now, use:

  git config --global push.default simple

When push.default is set to 'matching', git will push local branches
to the remote branches that already exist with the same name.

In Git 2.0, Git will default to the more conservative 'simple'
behavior, which only pushes the current branch to the corresponding
remote branch that 'git pull' uses to update the current branch.

See 'git help config' and search for 'push.default' for further information.
(the 'simple' mode was introduced in Git 1.7.11. Use the similar mode
'current' instead of 'simple' if you sometimes use older versions of Git)

fatal: could not read Username for 'https://github.com': No such device or address

DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 17:02:50.342392
DEBUG:root:i finished updated the demo pages2015-06-07 17:03:17.719320
DEBUG:root:heres the currentworkingderectory/home/ubuntu/forgescan.github.io

DEBUG:root:
DEBUG:root:[master 5914d6c] hapyak
 Committer: root <root@ip-172-31-18-114.us-west-2.compute.internal>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 46 insertions(+)

DEBUG:root:
DEBUG:root:
DEBUG:root:warning: push.default is unset; its implicit value is changing in
Git 2.0 from 'matching' to 'simple'. To squelch this message
and maintain the current behavior after the default changes, use:

  git config --global push.default matching

To squelch this message and adopt the new behavior now, use:

  git config --global push.default simple

When push.default is set to 'matching', git will push local branches
to the remote branches that already exist with the same name.

In Git 2.0, Git will default to the more conservative 'simple'
behavior, which only pushes the current branch to the corresponding
remote branch that 'git pull' uses to update the current branch.

See 'git help config' and search for 'push.default' for further information.
(the 'simple' mode was introduced in Git 1.7.11. Use the similar mode
'current' instead of 'simple' if you sometimes use older versions of Git)

fatal: could not read Username for 'https://github.com': No such device or address

DEBUG:root:got to end of git stuff
DEBUG:root:i finished updated the git2015-06-07 17:03:25.493708
DEBUG:root:i finished updated the demo pages2015-06-07 17:03:53.957041
DEBUG:root:heres the currentworkingderectory/home/ubuntu/forgescan.github.io

DEBUG:root:
